
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "nonassocIFXnonassocELSEnonassoc=ADDASSIGNSUBASSIGNMULASSIGNDIVASSIGNnonassocEQUALNOTEQUALnonassoc<>LESSEQUALMOREEQUALleft+-DOTADDDOTSUBleft*/DOTMULDOTDIVrightUNEGATIONleftTRANSPOSEADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQUAL EYE FLOAT FOR ID IF INTNUM LESSEQUAL MOREEQUAL MULASSIGN NOTEQUAL ONES PRINT RETURN STRING SUBASSIGN TRANSPOSE WHILE ZEROSprogram : instructions_optinstructions_opt : instructions instructions_opt : instructions : instructions instruction instructions : instruction instruction : block\n                   | if\n                   | print\n                   | while\n                   | for\n                   | break\n                   | continue\n                   | return\n                   | assign\n                   | assign_in_array  block : '{' instructions '}'  if : IF '(' assignment ')' instruction %prec IFX if : IF '(' assignment ')' instruction ELSE instruction  print : PRINT arguments ';'  arguments : assignment\n                  | assignment ',' arguments  while : WHILE '(' assignment ')' instruction  for : FOR ID '=' range instruction  range : expression ':' expression  break : BREAK ';'  continue : CONTINUE ';'  return : RETURN ';'  return : RETURN assignment ';'  assign : ID '=' assign\n               | ID '=' assignment ';'\n               | ID ADDASSIGN assignment ';'\n               | ID SUBASSIGN assignment ';'\n               | ID MULASSIGN assignment ';'\n               | ID DIVASSIGN assignment ';'  assign_in_array : ID array_range '=' assign\n                        | ID array_range '=' assignment ';'\n                        | ID array_range ADDASSIGN assignment ';'\n                        | ID array_range SUBASSIGN assignment ';'\n                        | ID array_range MULASSIGN assignment ';'\n                        | ID array_range DIVASSIGN assignment ';'  array_range : '[' INTNUM ',' INTNUM ']'\n                    | '[' INTNUM ']'  assignment : STRING\n                   | matrix_initialization\n                   | relational_expression\n                   | expression\n                   | array  array : '[' ']'  array : '[' dimensions ']'  dimensions : values  values : value  values : value ',' values  value : STRING\n              | number  relational_expression : expression '<' expression\n                              | expression '>' expression\n                              | expression LESSEQUAL expression\n                              | expression MOREEQUAL expression\n                              | expression EQUAL expression\n                              | expression NOTEQUAL expression  expression : expression '+' expression\n                   | expression '-' expression\n                   | expression '*' expression\n                   | expression '/' expression\n                   | expression DOTADD expression\n                   | expression DOTSUB expression\n                   | expression DOTMUL expression\n                   | expression DOTDIV expression  expression : number\n                   | ID  expression : ID TRANSPOSE  expression : '-' expression %prec UNEGATION  matrix_initialization : EYE '(' INTNUM ')'\n                                | ZEROS '(' INTNUM ')'\n                                | ONES '(' INTNUM ')'  number : INTNUM\n               | FLOAT "
    
_lr_action_items = {'SUBASSIGN':([15,47,97,133,153,],[46,87,46,-42,-41,]),'DOTDIV':([26,27,37,38,39,56,67,97,106,107,108,109,110,111,112,113,114,115,116,117,118,119,123,152,],[-76,-69,-70,-77,70,-72,-71,-70,70,70,-68,70,-63,70,70,-64,70,70,70,-67,70,70,70,70,]),'RETURN':([0,1,6,7,9,10,11,13,17,19,20,21,22,23,26,27,30,37,38,41,44,54,55,56,58,67,83,98,100,108,109,110,111,113,114,115,117,120,122,124,130,131,132,135,136,137,142,143,145,146,147,148,149,151,152,154,155,],[2,-15,-7,-10,-8,2,-13,-11,-5,-9,-12,2,-14,-6,-76,-69,-27,-70,-77,-26,-4,-25,2,-72,-28,-71,-19,-29,-16,-68,-61,-63,-62,-64,-66,-65,-67,2,2,-32,-35,-33,-31,-34,-30,2,-22,-23,-38,-39,-37,-40,-36,-17,-24,2,-18,]),'NOTEQUAL':([26,27,37,38,39,56,67,97,108,109,110,111,113,114,115,117,],[-76,-69,-70,-77,69,-72,-71,-70,-68,-61,-63,-62,-64,-66,-65,-67,]),'TRANSPOSE':([37,97,],[67,67,]),'EQUAL':([26,27,37,38,39,56,67,97,108,109,110,111,113,114,115,117,],[-76,-69,-70,-77,74,-72,-71,-70,-68,-61,-63,-62,-64,-66,-65,-67,]),'DOTADD':([26,27,37,38,39,56,67,97,106,107,108,109,110,111,112,113,114,115,116,117,118,119,123,152,],[-76,-69,-70,-77,77,-72,-71,-70,77,77,-68,-61,-63,-62,77,-64,-66,-65,77,-67,77,77,77,77,]),'WHILE':([0,1,6,7,9,10,11,13,17,19,20,21,22,23,26,27,30,37,38,41,44,54,55,56,58,67,83,98,100,108,109,110,111,113,114,115,117,120,122,124,130,131,132,135,136,137,142,143,145,146,147,148,149,151,152,154,155,],[3,-15,-7,-10,-8,3,-13,-11,-5,-9,-12,3,-14,-6,-76,-69,-27,-70,-77,-26,-4,-25,3,-72,-28,-71,-19,-29,-16,-68,-61,-63,-62,-64,-66,-65,-67,3,3,-32,-35,-33,-31,-34,-30,3,-22,-23,-38,-39,-37,-40,-36,-17,-24,3,-18,]),'PRINT':([0,1,6,7,9,10,11,13,17,19,20,21,22,23,26,27,30,37,38,41,44,54,55,56,58,67,83,98,100,108,109,110,111,113,114,115,117,120,122,124,130,131,132,135,136,137,142,143,145,146,147,148,149,151,152,154,155,],[5,-15,-7,-10,-8,5,-13,-11,-5,-9,-12,5,-14,-6,-76,-69,-27,-70,-77,-26,-4,-25,5,-72,-28,-71,-19,-29,-16,-68,-61,-63,-62,-64,-66,-65,-67,5,5,-32,-35,-33,-31,-34,-30,5,-22,-23,-38,-39,-37,-40,-36,-17,-24,5,-18,]),'DOTMUL':([26,27,37,38,39,56,67,97,106,107,108,109,110,111,112,113,114,115,116,117,118,119,123,152,],[-76,-69,-70,-77,79,-72,-71,-70,79,79,-68,79,-63,79,79,-64,79,79,79,-67,79,79,79,79,]),'INTNUM':([2,5,28,36,40,46,48,49,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,84,85,87,88,89,90,91,105,134,144,],[26,26,26,26,26,26,26,26,94,26,26,26,101,102,103,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,150,26,]),')':([24,25,26,27,29,32,37,38,39,56,65,67,82,99,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,138,139,140,],[-44,-47,-76,-69,-45,-43,-70,-77,-46,-72,-48,-71,120,137,138,139,140,-49,-58,-60,-68,-61,-63,-62,-59,-64,-66,-65,-57,-67,-55,-56,-73,-75,-74,]),'(':([3,16,31,34,35,],[40,53,57,59,60,]),'+':([26,27,37,38,39,56,67,97,106,107,108,109,110,111,112,113,114,115,116,117,118,119,123,152,],[-76,-69,-70,-77,71,-72,-71,-70,71,71,-68,-61,-63,-62,71,-64,-66,-65,71,-67,71,71,71,71,]),'*':([26,27,37,38,39,56,67,97,106,107,108,109,110,111,112,113,114,115,116,117,118,119,123,152,],[-76,-69,-70,-77,72,-72,-71,-70,72,72,-68,72,-63,72,72,-64,72,72,72,-67,72,72,72,72,]),'-':([2,5,26,27,28,37,38,39,40,46,48,49,51,52,53,56,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,84,85,87,88,89,90,91,97,106,107,108,109,110,111,112,113,114,115,116,117,118,119,123,144,152,],[28,28,-76,-69,28,-70,-77,73,28,28,28,28,28,28,28,-72,-71,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-70,73,73,-68,-61,-63,-62,73,-64,-66,-65,73,-67,73,73,73,28,73,]),',':([24,25,26,27,29,32,37,38,39,43,56,62,63,65,66,67,94,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,138,139,140,],[-44,-47,-76,-69,-45,-43,-70,-77,-46,84,-72,105,-54,-48,-53,-71,134,-49,-58,-60,-68,-61,-63,-62,-59,-64,-66,-65,-57,-67,-55,-56,-73,-75,-74,]),'/':([26,27,37,38,39,56,67,97,106,107,108,109,110,111,112,113,114,115,116,117,118,119,123,152,],[-76,-69,-70,-77,75,-72,-71,-70,75,75,-68,75,-63,75,75,-64,75,75,75,-67,75,75,75,75,]),'DIVASSIGN':([15,47,97,133,153,],[51,90,51,-42,-41,]),'ADDASSIGN':([15,47,97,133,153,],[49,89,49,-42,-41,]),';':([2,4,18,24,25,26,27,29,32,33,37,38,39,42,43,56,65,67,86,92,93,95,96,97,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,125,126,127,128,129,138,139,140,],[30,41,54,-44,-47,-76,-69,-45,-43,58,-70,-77,-46,83,-20,-72,-48,-71,124,131,132,135,136,-70,-49,-58,-60,-68,-61,-63,-62,-59,-64,-66,-65,-57,-67,-55,-56,-21,145,146,147,148,149,-73,-75,-74,]),':':([26,27,37,38,56,67,108,109,110,111,113,114,115,117,123,],[-76,-69,-70,-77,-72,-71,-68,-61,-63,-62,-64,-66,-65,-67,144,]),'=':([15,45,47,97,133,153,],[52,85,91,52,-42,-41,]),'<':([26,27,37,38,39,56,67,97,108,109,110,111,113,114,115,117,],[-76,-69,-70,-77,80,-72,-71,-70,-68,-61,-63,-62,-64,-66,-65,-67,]),'$end':([0,1,6,7,8,9,10,11,13,14,17,19,20,22,23,30,41,44,54,58,83,98,100,124,130,131,132,135,136,142,143,145,146,147,148,149,151,155,],[-3,-15,-7,-10,0,-8,-2,-13,-11,-1,-5,-9,-12,-14,-6,-27,-26,-4,-25,-28,-19,-29,-16,-32,-35,-33,-31,-34,-30,-22,-23,-38,-39,-37,-40,-36,-17,-18,]),'EYE':([2,5,40,46,48,49,51,52,53,84,87,88,89,90,91,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'STRING':([2,5,36,40,46,48,49,51,52,53,84,87,88,89,90,91,105,],[32,32,66,32,32,32,32,32,32,32,32,32,32,32,32,32,66,]),'FOR':([0,1,6,7,9,10,11,13,17,19,20,21,22,23,26,27,30,37,38,41,44,54,55,56,58,67,83,98,100,108,109,110,111,113,114,115,117,120,122,124,130,131,132,135,136,137,142,143,145,146,147,148,149,151,152,154,155,],[12,-15,-7,-10,-8,12,-13,-11,-5,-9,-12,12,-14,-6,-76,-69,-27,-70,-77,-26,-4,-25,12,-72,-28,-71,-19,-29,-16,-68,-61,-63,-62,-64,-66,-65,-67,12,12,-32,-35,-33,-31,-34,-30,12,-22,-23,-38,-39,-37,-40,-36,-17,-24,12,-18,]),'ELSE':([1,6,7,9,11,13,19,20,22,23,30,41,54,58,83,98,100,124,130,131,132,135,136,142,143,145,146,147,148,149,151,155,],[-15,-7,-10,-8,-13,-11,-9,-12,-14,-6,-27,-26,-25,-28,-19,-29,-16,-32,-35,-33,-31,-34,-30,-22,-23,-38,-39,-37,-40,-36,154,-18,]),'ONES':([2,5,40,46,48,49,51,52,53,84,87,88,89,90,91,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'ZEROS':([2,5,40,46,48,49,51,52,53,84,87,88,89,90,91,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'LESSEQUAL':([26,27,37,38,39,56,67,97,108,109,110,111,113,114,115,117,],[-76,-69,-70,-77,78,-72,-71,-70,-68,-61,-63,-62,-64,-66,-65,-67,]),'[':([2,5,15,40,46,48,49,51,52,53,84,87,88,89,90,91,],[36,36,50,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'DOTSUB':([26,27,37,38,39,56,67,97,106,107,108,109,110,111,112,113,114,115,116,117,118,119,123,152,],[-76,-69,-70,-77,76,-72,-71,-70,76,76,-68,-61,-63,-62,76,-64,-66,-65,76,-67,76,76,76,76,]),']':([26,36,38,61,62,63,64,66,94,141,150,],[-76,65,-77,104,-51,-54,-50,-53,133,-52,153,]),'ID':([0,1,2,5,6,7,9,10,11,12,13,17,19,20,21,22,23,26,27,28,30,37,38,40,41,44,46,48,49,51,52,53,54,55,56,58,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,87,88,89,90,91,98,100,108,109,110,111,113,114,115,117,120,122,124,130,131,132,135,136,137,142,143,144,145,146,147,148,149,151,152,154,155,],[15,-15,37,37,-7,-10,-8,15,-13,45,-11,-5,-9,-12,15,-14,-6,-76,-69,37,-27,-70,-77,37,-26,-4,37,37,37,37,97,37,-25,15,-72,-28,-71,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-19,37,37,37,37,37,37,97,-29,-16,-68,-61,-63,-62,-64,-66,-65,-67,15,15,-32,-35,-33,-31,-34,-30,15,-22,-23,37,-38,-39,-37,-40,-36,-17,-24,15,-18,]),'IF':([0,1,6,7,9,10,11,13,17,19,20,21,22,23,26,27,30,37,38,41,44,54,55,56,58,67,83,98,100,108,109,110,111,113,114,115,117,120,122,124,130,131,132,135,136,137,142,143,145,146,147,148,149,151,152,154,155,],[16,-15,-7,-10,-8,16,-13,-11,-5,-9,-12,16,-14,-6,-76,-69,-27,-70,-77,-26,-4,-25,16,-72,-28,-71,-19,-29,-16,-68,-61,-63,-62,-64,-66,-65,-67,16,16,-32,-35,-33,-31,-34,-30,16,-22,-23,-38,-39,-37,-40,-36,-17,-24,16,-18,]),'MOREEQUAL':([26,27,37,38,39,56,67,97,108,109,110,111,113,114,115,117,],[-76,-69,-70,-77,68,-72,-71,-70,-68,-61,-63,-62,-64,-66,-65,-67,]),'FLOAT':([2,5,28,36,40,46,48,49,51,52,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,84,85,87,88,89,90,91,105,144,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'BREAK':([0,1,6,7,9,10,11,13,17,19,20,21,22,23,26,27,30,37,38,41,44,54,55,56,58,67,83,98,100,108,109,110,111,113,114,115,117,120,122,124,130,131,132,135,136,137,142,143,145,146,147,148,149,151,152,154,155,],[18,-15,-7,-10,-8,18,-13,-11,-5,-9,-12,18,-14,-6,-76,-69,-27,-70,-77,-26,-4,-25,18,-72,-28,-71,-19,-29,-16,-68,-61,-63,-62,-64,-66,-65,-67,18,18,-32,-35,-33,-31,-34,-30,18,-22,-23,-38,-39,-37,-40,-36,-17,-24,18,-18,]),'CONTINUE':([0,1,6,7,9,10,11,13,17,19,20,21,22,23,26,27,30,37,38,41,44,54,55,56,58,67,83,98,100,108,109,110,111,113,114,115,117,120,122,124,130,131,132,135,136,137,142,143,145,146,147,148,149,151,152,154,155,],[4,-15,-7,-10,-8,4,-13,-11,-5,-9,-12,4,-14,-6,-76,-69,-27,-70,-77,-26,-4,-25,4,-72,-28,-71,-19,-29,-16,-68,-61,-63,-62,-64,-66,-65,-67,4,4,-32,-35,-33,-31,-34,-30,4,-22,-23,-38,-39,-37,-40,-36,-17,-24,4,-18,]),'MULASSIGN':([15,47,97,133,153,],[48,88,48,-42,-41,]),'{':([0,1,6,7,9,10,11,13,17,19,20,21,22,23,26,27,30,37,38,41,44,54,55,56,58,67,83,98,100,108,109,110,111,113,114,115,117,120,122,124,130,131,132,135,136,137,142,143,145,146,147,148,149,151,152,154,155,],[21,-15,-7,-10,-8,21,-13,-11,-5,-9,-12,21,-14,-6,-76,-69,-27,-70,-77,-26,-4,-25,21,-72,-28,-71,-19,-29,-16,-68,-61,-63,-62,-64,-66,-65,-67,21,21,-32,-35,-33,-31,-34,-30,21,-22,-23,-38,-39,-37,-40,-36,-17,-24,21,-18,]),'>':([26,27,37,38,39,56,67,97,108,109,110,111,113,114,115,117,],[-76,-69,-70,-77,81,-72,-71,-70,-68,-61,-63,-62,-64,-66,-65,-67,]),'}':([1,6,7,9,11,13,17,19,20,22,23,30,41,44,54,55,58,83,98,100,124,130,131,132,135,136,142,143,145,146,147,148,149,151,155,],[-15,-7,-10,-8,-13,-11,-5,-9,-12,-14,-6,-27,-26,-4,-25,100,-28,-19,-29,-16,-32,-35,-33,-31,-34,-30,-22,-23,-38,-39,-37,-40,-36,-17,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assign_in_array':([0,10,21,55,120,122,137,154,],[1,1,1,1,1,1,1,1,]),'matrix_initialization':([2,5,40,46,48,49,51,52,53,84,87,88,89,90,91,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'number':([2,5,28,36,40,46,48,49,51,52,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,84,85,87,88,89,90,91,105,144,],[27,27,27,63,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,63,27,]),'array':([2,5,40,46,48,49,51,52,53,84,87,88,89,90,91,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'if':([0,10,21,55,120,122,137,154,],[6,6,6,6,6,6,6,6,]),'dimensions':([36,],[61,]),'for':([0,10,21,55,120,122,137,154,],[7,7,7,7,7,7,7,7,]),'range':([85,],[122,]),'program':([0,],[8,]),'arguments':([5,84,],[42,121,]),'print':([0,10,21,55,120,122,137,154,],[9,9,9,9,9,9,9,9,]),'relational_expression':([2,5,40,46,48,49,51,52,53,84,87,88,89,90,91,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'return':([0,10,21,55,120,122,137,154,],[11,11,11,11,11,11,11,11,]),'assignment':([2,5,40,46,48,49,51,52,53,84,87,88,89,90,91,],[33,43,82,86,92,93,95,96,99,43,125,126,127,128,129,]),'break':([0,10,21,55,120,122,137,154,],[13,13,13,13,13,13,13,13,]),'instructions_opt':([0,],[14,]),'instructions':([0,21,],[10,55,]),'array_range':([15,],[47,]),'instruction':([0,10,21,55,120,122,137,154,],[17,44,17,44,142,143,151,155,]),'value':([36,105,],[62,62,]),'while':([0,10,21,55,120,122,137,154,],[19,19,19,19,19,19,19,19,]),'continue':([0,10,21,55,120,122,137,154,],[20,20,20,20,20,20,20,20,]),'values':([36,105,],[64,141,]),'expression':([2,5,28,40,46,48,49,51,52,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,84,85,87,88,89,90,91,144,],[39,39,56,39,39,39,39,39,39,39,106,107,108,109,110,111,112,113,114,115,116,117,118,119,39,123,39,39,39,39,39,152,]),'assign':([0,10,21,52,55,91,120,122,137,154,],[22,22,22,98,22,130,22,22,22,22,]),'block':([0,10,21,55,120,122,137,154,],[23,23,23,23,23,23,23,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',30),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt_1','Mparser.py',35),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt_2','Mparser.py',40),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_1','Mparser.py',45),
  ('instructions -> instruction','instructions',1,'p_instructions_2','Mparser.py',50),
  ('instruction -> block','instruction',1,'p_instruction','Mparser.py',55),
  ('instruction -> if','instruction',1,'p_instruction','Mparser.py',56),
  ('instruction -> print','instruction',1,'p_instruction','Mparser.py',57),
  ('instruction -> while','instruction',1,'p_instruction','Mparser.py',58),
  ('instruction -> for','instruction',1,'p_instruction','Mparser.py',59),
  ('instruction -> break','instruction',1,'p_instruction','Mparser.py',60),
  ('instruction -> continue','instruction',1,'p_instruction','Mparser.py',61),
  ('instruction -> return','instruction',1,'p_instruction','Mparser.py',62),
  ('instruction -> assign','instruction',1,'p_instruction','Mparser.py',63),
  ('instruction -> assign_in_array','instruction',1,'p_instruction','Mparser.py',64),
  ('block -> { instructions }','block',3,'p_block','Mparser.py',69),
  ('if -> IF ( assignment ) instruction','if',5,'p_if','Mparser.py',74),
  ('if -> IF ( assignment ) instruction ELSE instruction','if',7,'p_if_else','Mparser.py',79),
  ('print -> PRINT arguments ;','print',3,'p_print','Mparser.py',84),
  ('arguments -> assignment','arguments',1,'p_arguments','Mparser.py',89),
  ('arguments -> assignment , arguments','arguments',3,'p_arguments','Mparser.py',90),
  ('while -> WHILE ( assignment ) instruction','while',5,'p_while','Mparser.py',95),
  ('for -> FOR ID = range instruction','for',5,'p_for','Mparser.py',100),
  ('range -> expression : expression','range',3,'p_range','Mparser.py',105),
  ('break -> BREAK ;','break',2,'p_break','Mparser.py',110),
  ('continue -> CONTINUE ;','continue',2,'p_continue','Mparser.py',115),
  ('return -> RETURN ;','return',2,'p_return','Mparser.py',120),
  ('return -> RETURN assignment ;','return',3,'p_returnValue','Mparser.py',125),
  ('assign -> ID = assign','assign',3,'p_assign','Mparser.py',130),
  ('assign -> ID = assignment ;','assign',4,'p_assign','Mparser.py',131),
  ('assign -> ID ADDASSIGN assignment ;','assign',4,'p_assign','Mparser.py',132),
  ('assign -> ID SUBASSIGN assignment ;','assign',4,'p_assign','Mparser.py',133),
  ('assign -> ID MULASSIGN assignment ;','assign',4,'p_assign','Mparser.py',134),
  ('assign -> ID DIVASSIGN assignment ;','assign',4,'p_assign','Mparser.py',135),
  ('assign_in_array -> ID array_range = assign','assign_in_array',4,'p_assign_in_array','Mparser.py',140),
  ('assign_in_array -> ID array_range = assignment ;','assign_in_array',5,'p_assign_in_array','Mparser.py',141),
  ('assign_in_array -> ID array_range ADDASSIGN assignment ;','assign_in_array',5,'p_assign_in_array','Mparser.py',142),
  ('assign_in_array -> ID array_range SUBASSIGN assignment ;','assign_in_array',5,'p_assign_in_array','Mparser.py',143),
  ('assign_in_array -> ID array_range MULASSIGN assignment ;','assign_in_array',5,'p_assign_in_array','Mparser.py',144),
  ('assign_in_array -> ID array_range DIVASSIGN assignment ;','assign_in_array',5,'p_assign_in_array','Mparser.py',145),
  ('array_range -> [ INTNUM , INTNUM ]','array_range',5,'p_array_range','Mparser.py',150),
  ('array_range -> [ INTNUM ]','array_range',3,'p_array_range','Mparser.py',151),
  ('assignment -> STRING','assignment',1,'p_assignment','Mparser.py',155),
  ('assignment -> matrix_initialization','assignment',1,'p_assignment','Mparser.py',156),
  ('assignment -> relational_expression','assignment',1,'p_assignment','Mparser.py',157),
  ('assignment -> expression','assignment',1,'p_assignment','Mparser.py',158),
  ('assignment -> array','assignment',1,'p_assignment','Mparser.py',159),
  ('array -> [ ]','array',2,'p_array','Mparser.py',164),
  ('array -> [ dimensions ]','array',3,'p_array2','Mparser.py',169),
  ('dimensions -> values','dimensions',1,'p_dimensions','Mparser.py',174),
  ('values -> value','values',1,'p_values','Mparser.py',181),
  ('values -> value , values','values',3,'p_values2','Mparser.py',186),
  ('value -> STRING','value',1,'p_value','Mparser.py',192),
  ('value -> number','value',1,'p_value','Mparser.py',193),
  ('relational_expression -> expression < expression','relational_expression',3,'p_relational_expression','Mparser.py',198),
  ('relational_expression -> expression > expression','relational_expression',3,'p_relational_expression','Mparser.py',199),
  ('relational_expression -> expression LESSEQUAL expression','relational_expression',3,'p_relational_expression','Mparser.py',200),
  ('relational_expression -> expression MOREEQUAL expression','relational_expression',3,'p_relational_expression','Mparser.py',201),
  ('relational_expression -> expression EQUAL expression','relational_expression',3,'p_relational_expression','Mparser.py',202),
  ('relational_expression -> expression NOTEQUAL expression','relational_expression',3,'p_relational_expression','Mparser.py',203),
  ('expression -> expression + expression','expression',3,'p_expression_binary_operation','Mparser.py',208),
  ('expression -> expression - expression','expression',3,'p_expression_binary_operation','Mparser.py',209),
  ('expression -> expression * expression','expression',3,'p_expression_binary_operation','Mparser.py',210),
  ('expression -> expression / expression','expression',3,'p_expression_binary_operation','Mparser.py',211),
  ('expression -> expression DOTADD expression','expression',3,'p_expression_binary_operation','Mparser.py',212),
  ('expression -> expression DOTSUB expression','expression',3,'p_expression_binary_operation','Mparser.py',213),
  ('expression -> expression DOTMUL expression','expression',3,'p_expression_binary_operation','Mparser.py',214),
  ('expression -> expression DOTDIV expression','expression',3,'p_expression_binary_operation','Mparser.py',215),
  ('expression -> number','expression',1,'p_expression','Mparser.py',220),
  ('expression -> ID','expression',1,'p_expression','Mparser.py',221),
  ('expression -> ID TRANSPOSE','expression',2,'p_expression_transpose','Mparser.py',226),
  ('expression -> - expression','expression',2,'p_expression_unegation','Mparser.py',231),
  ('matrix_initialization -> EYE ( INTNUM )','matrix_initialization',4,'p_matrix_initialization','Mparser.py',236),
  ('matrix_initialization -> ZEROS ( INTNUM )','matrix_initialization',4,'p_matrix_initialization','Mparser.py',237),
  ('matrix_initialization -> ONES ( INTNUM )','matrix_initialization',4,'p_matrix_initialization','Mparser.py',238),
  ('number -> INTNUM','number',1,'p_number','Mparser.py',243),
  ('number -> FLOAT','number',1,'p_number','Mparser.py',244),
]
