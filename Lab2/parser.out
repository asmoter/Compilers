Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions_opt
Rule 2     instructions_opt -> instructions
Rule 3     instructions_opt -> <empty>
Rule 4     instructions -> instructions instruction
Rule 5     instructions -> instruction
Rule 6     instruction -> block
Rule 7     instruction -> if
Rule 8     instruction -> print
Rule 9     instruction -> while
Rule 10    instruction -> for
Rule 11    instruction -> break
Rule 12    instruction -> continue
Rule 13    instruction -> return
Rule 14    instruction -> assign
Rule 15    instruction -> assign_in_array
Rule 16    block -> { instructions }
Rule 17    if -> IF ( assignment ) instruction
Rule 18    if -> IF ( assignment ) instruction ELSE instruction
Rule 19    print -> PRINT arguments ;
Rule 20    arguments -> assignment
Rule 21    arguments -> assignment , arguments
Rule 22    while -> WHILE ( assignment ) instruction
Rule 23    for -> FOR ID = range instruction
Rule 24    range -> expression : expression
Rule 25    break -> BREAK ;
Rule 26    continue -> CONTINUE ;
Rule 27    return -> RETURN ;
Rule 28    return -> RETURN assignment ;
Rule 29    assign -> ID = assign
Rule 30    assign -> ID = assignment ;
Rule 31    assign -> ID ADDASSIGN assignment ;
Rule 32    assign -> ID SUBASSIGN assignment ;
Rule 33    assign -> ID MULASSIGN assignment ;
Rule 34    assign -> ID DIVASSIGN assignment ;
Rule 35    assign_in_array -> ID array_range = assign
Rule 36    assign_in_array -> ID array_range = assignment ;
Rule 37    assign_in_array -> ID array_range ADDASSIGN assignment ;
Rule 38    assign_in_array -> ID array_range SUBASSIGN assignment ;
Rule 39    assign_in_array -> ID array_range MULASSIGN assignment ;
Rule 40    assign_in_array -> ID array_range DIVASSIGN assignment ;
Rule 41    array_range -> [ INTNUM , INTNUM ]
Rule 42    array_range -> [ INTNUM ]
Rule 43    assignment -> STRING
Rule 44    assignment -> matrix_initialization
Rule 45    assignment -> relational_expression
Rule 46    assignment -> expression
Rule 47    assignment -> array
Rule 48    array -> [ ]
Rule 49    array -> [ dimensions ]
Rule 50    dimensions -> values
Rule 51    dimensions -> values ; dimensions
Rule 52    values -> value
Rule 53    values -> value , values
Rule 54    value -> STRING
Rule 55    value -> number
Rule 56    relational_expression -> expression < expression
Rule 57    relational_expression -> expression > expression
Rule 58    relational_expression -> expression LESSEQUAL expression
Rule 59    relational_expression -> expression MOREEQUAL expression
Rule 60    relational_expression -> expression EQUAL expression
Rule 61    relational_expression -> expression NOTEQUAL expression
Rule 62    expression -> expression + expression
Rule 63    expression -> expression - expression
Rule 64    expression -> expression * expression
Rule 65    expression -> expression / expression
Rule 66    expression -> expression DOTADD expression
Rule 67    expression -> expression DOTSUB expression
Rule 68    expression -> expression DOTMUL expression
Rule 69    expression -> expression DOTDIV expression
Rule 70    expression -> number
Rule 71    expression -> ID
Rule 72    expression -> ID TRANSPOSE
Rule 73    expression -> - expression
Rule 74    matrix_initialization -> EYE ( INTNUM )
Rule 75    matrix_initialization -> ZEROS ( INTNUM )
Rule 76    matrix_initialization -> ONES ( INTNUM )
Rule 77    number -> INTNUM
Rule 78    number -> FLOAT

Terminals, with rules where they appear

(                    : 17 18 22 74 75 76
)                    : 17 18 22 74 75 76
*                    : 64
+                    : 62
,                    : 21 41 53
-                    : 63 73
/                    : 65
:                    : 24
;                    : 19 25 26 27 28 30 31 32 33 34 36 37 38 39 40 51
<                    : 56
=                    : 23 29 30 35 36
>                    : 57
ADDASSIGN            : 31 37
BREAK                : 25
CONTINUE             : 26
DIVASSIGN            : 34 40
DOTADD               : 66
DOTDIV               : 69
DOTMUL               : 68
DOTSUB               : 67
ELSE                 : 18
EQUAL                : 60
EYE                  : 74
FLOAT                : 78
FOR                  : 23
ID                   : 23 29 30 31 32 33 34 35 36 37 38 39 40 71 72
IF                   : 17 18
INTNUM               : 41 41 42 74 75 76 77
LESSEQUAL            : 58
MOREEQUAL            : 59
MULASSIGN            : 33 39
NOTEQUAL             : 61
ONES                 : 76
PRINT                : 19
RETURN               : 27 28
STRING               : 43 54
SUBASSIGN            : 32 38
TRANSPOSE            : 72
WHILE                : 22
ZEROS                : 75
[                    : 41 42 48 49
]                    : 41 42 48 49
error                : 
{                    : 16
}                    : 16

Nonterminals, with rules where they appear

arguments            : 19 21
array                : 47
array_range          : 35 36 37 38 39 40
assign               : 14 29 35
assign_in_array      : 15
assignment           : 17 18 20 21 22 28 30 31 32 33 34 36 37 38 39 40
block                : 6
break                : 11
continue             : 12
dimensions           : 49 51
expression           : 24 24 46 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 73
for                  : 10
if                   : 7
instruction          : 4 5 17 18 18 22 23
instructions         : 2 4 16
instructions_opt     : 1
matrix_initialization : 44
number               : 55 70
print                : 8
program              : 0
range                : 23
relational_expression : 45
return               : 13
value                : 52 53
values               : 50 51 53
while                : 9

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions_opt
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> .
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . block
    (7) instruction -> . if
    (8) instruction -> . print
    (9) instruction -> . while
    (10) instruction -> . for
    (11) instruction -> . break
    (12) instruction -> . continue
    (13) instruction -> . return
    (14) instruction -> . assign
    (15) instruction -> . assign_in_array
    (16) block -> . { instructions }
    (17) if -> . IF ( assignment ) instruction
    (18) if -> . IF ( assignment ) instruction ELSE instruction
    (19) print -> . PRINT arguments ;
    (22) while -> . WHILE ( assignment ) instruction
    (23) for -> . FOR ID = range instruction
    (25) break -> . BREAK ;
    (26) continue -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN assignment ;
    (29) assign -> . ID = assign
    (30) assign -> . ID = assignment ;
    (31) assign -> . ID ADDASSIGN assignment ;
    (32) assign -> . ID SUBASSIGN assignment ;
    (33) assign -> . ID MULASSIGN assignment ;
    (34) assign -> . ID DIVASSIGN assignment ;
    (35) assign_in_array -> . ID array_range = assign
    (36) assign_in_array -> . ID array_range = assignment ;
    (37) assign_in_array -> . ID array_range ADDASSIGN assignment ;
    (38) assign_in_array -> . ID array_range SUBASSIGN assignment ;
    (39) assign_in_array -> . ID array_range MULASSIGN assignment ;
    (40) assign_in_array -> . ID array_range DIVASSIGN assignment ;

    $end            reduce using rule 3 (instructions_opt -> .)
    {               shift and go to state 21
    IF              shift and go to state 16
    PRINT           shift and go to state 5
    WHILE           shift and go to state 3
    FOR             shift and go to state 12
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 4
    RETURN          shift and go to state 2
    ID              shift and go to state 15

    assign_in_array                shift and go to state 1
    return                         shift and go to state 11
    continue                       shift and go to state 20
    for                            shift and go to state 7
    instruction                    shift and go to state 17
    break                          shift and go to state 13
    instructions_opt               shift and go to state 14
    while                          shift and go to state 19
    program                        shift and go to state 8
    print                          shift and go to state 9
    instructions                   shift and go to state 10
    assign                         shift and go to state 22
    block                          shift and go to state 23
    if                             shift and go to state 6

state 1

    (15) instruction -> assign_in_array .

    {               reduce using rule 15 (instruction -> assign_in_array .)
    IF              reduce using rule 15 (instruction -> assign_in_array .)
    PRINT           reduce using rule 15 (instruction -> assign_in_array .)
    WHILE           reduce using rule 15 (instruction -> assign_in_array .)
    FOR             reduce using rule 15 (instruction -> assign_in_array .)
    BREAK           reduce using rule 15 (instruction -> assign_in_array .)
    CONTINUE        reduce using rule 15 (instruction -> assign_in_array .)
    RETURN          reduce using rule 15 (instruction -> assign_in_array .)
    ID              reduce using rule 15 (instruction -> assign_in_array .)
    $end            reduce using rule 15 (instruction -> assign_in_array .)
    }               reduce using rule 15 (instruction -> assign_in_array .)
    ELSE            reduce using rule 15 (instruction -> assign_in_array .)


state 2

    (27) return -> RETURN . ;
    (28) return -> RETURN . assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_initialization
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_initialization -> . EYE ( INTNUM )
    (75) matrix_initialization -> . ZEROS ( INTNUM )
    (76) matrix_initialization -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression MOREEQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    ;               shift and go to state 30
    STRING          shift and go to state 32
    EYE             shift and go to state 31
    ZEROS           shift and go to state 35
    ONES            shift and go to state 34
    ID              shift and go to state 37
    -               shift and go to state 28
    [               shift and go to state 36
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    matrix_initialization          shift and go to state 24
    assignment                     shift and go to state 33
    number                         shift and go to state 27
    relational_expression          shift and go to state 29
    array                          shift and go to state 25
    expression                     shift and go to state 39

state 3

    (22) while -> WHILE . ( assignment ) instruction

    (               shift and go to state 40


state 4

    (26) continue -> CONTINUE . ;

    ;               shift and go to state 41


state 5

    (19) print -> PRINT . arguments ;
    (20) arguments -> . assignment
    (21) arguments -> . assignment , arguments
    (43) assignment -> . STRING
    (44) assignment -> . matrix_initialization
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_initialization -> . EYE ( INTNUM )
    (75) matrix_initialization -> . ZEROS ( INTNUM )
    (76) matrix_initialization -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression MOREEQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    STRING          shift and go to state 32
    EYE             shift and go to state 31
    ZEROS           shift and go to state 35
    ONES            shift and go to state 34
    ID              shift and go to state 37
    -               shift and go to state 28
    [               shift and go to state 36
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    matrix_initialization          shift and go to state 24
    assignment                     shift and go to state 43
    number                         shift and go to state 27
    relational_expression          shift and go to state 29
    array                          shift and go to state 25
    expression                     shift and go to state 39
    arguments                      shift and go to state 42

state 6

    (7) instruction -> if .

    {               reduce using rule 7 (instruction -> if .)
    IF              reduce using rule 7 (instruction -> if .)
    PRINT           reduce using rule 7 (instruction -> if .)
    WHILE           reduce using rule 7 (instruction -> if .)
    FOR             reduce using rule 7 (instruction -> if .)
    BREAK           reduce using rule 7 (instruction -> if .)
    CONTINUE        reduce using rule 7 (instruction -> if .)
    RETURN          reduce using rule 7 (instruction -> if .)
    ID              reduce using rule 7 (instruction -> if .)
    $end            reduce using rule 7 (instruction -> if .)
    }               reduce using rule 7 (instruction -> if .)
    ELSE            reduce using rule 7 (instruction -> if .)


state 7

    (10) instruction -> for .

    {               reduce using rule 10 (instruction -> for .)
    IF              reduce using rule 10 (instruction -> for .)
    PRINT           reduce using rule 10 (instruction -> for .)
    WHILE           reduce using rule 10 (instruction -> for .)
    FOR             reduce using rule 10 (instruction -> for .)
    BREAK           reduce using rule 10 (instruction -> for .)
    CONTINUE        reduce using rule 10 (instruction -> for .)
    RETURN          reduce using rule 10 (instruction -> for .)
    ID              reduce using rule 10 (instruction -> for .)
    $end            reduce using rule 10 (instruction -> for .)
    }               reduce using rule 10 (instruction -> for .)
    ELSE            reduce using rule 10 (instruction -> for .)


state 8

    (0) S' -> program .



state 9

    (8) instruction -> print .

    {               reduce using rule 8 (instruction -> print .)
    IF              reduce using rule 8 (instruction -> print .)
    PRINT           reduce using rule 8 (instruction -> print .)
    WHILE           reduce using rule 8 (instruction -> print .)
    FOR             reduce using rule 8 (instruction -> print .)
    BREAK           reduce using rule 8 (instruction -> print .)
    CONTINUE        reduce using rule 8 (instruction -> print .)
    RETURN          reduce using rule 8 (instruction -> print .)
    ID              reduce using rule 8 (instruction -> print .)
    $end            reduce using rule 8 (instruction -> print .)
    }               reduce using rule 8 (instruction -> print .)
    ELSE            reduce using rule 8 (instruction -> print .)


state 10

    (2) instructions_opt -> instructions .
    (4) instructions -> instructions . instruction
    (6) instruction -> . block
    (7) instruction -> . if
    (8) instruction -> . print
    (9) instruction -> . while
    (10) instruction -> . for
    (11) instruction -> . break
    (12) instruction -> . continue
    (13) instruction -> . return
    (14) instruction -> . assign
    (15) instruction -> . assign_in_array
    (16) block -> . { instructions }
    (17) if -> . IF ( assignment ) instruction
    (18) if -> . IF ( assignment ) instruction ELSE instruction
    (19) print -> . PRINT arguments ;
    (22) while -> . WHILE ( assignment ) instruction
    (23) for -> . FOR ID = range instruction
    (25) break -> . BREAK ;
    (26) continue -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN assignment ;
    (29) assign -> . ID = assign
    (30) assign -> . ID = assignment ;
    (31) assign -> . ID ADDASSIGN assignment ;
    (32) assign -> . ID SUBASSIGN assignment ;
    (33) assign -> . ID MULASSIGN assignment ;
    (34) assign -> . ID DIVASSIGN assignment ;
    (35) assign_in_array -> . ID array_range = assign
    (36) assign_in_array -> . ID array_range = assignment ;
    (37) assign_in_array -> . ID array_range ADDASSIGN assignment ;
    (38) assign_in_array -> . ID array_range SUBASSIGN assignment ;
    (39) assign_in_array -> . ID array_range MULASSIGN assignment ;
    (40) assign_in_array -> . ID array_range DIVASSIGN assignment ;

    $end            reduce using rule 2 (instructions_opt -> instructions .)
    {               shift and go to state 21
    IF              shift and go to state 16
    PRINT           shift and go to state 5
    WHILE           shift and go to state 3
    FOR             shift and go to state 12
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 4
    RETURN          shift and go to state 2
    ID              shift and go to state 15

    assign_in_array                shift and go to state 1
    return                         shift and go to state 11
    for                            shift and go to state 7
    instruction                    shift and go to state 44
    break                          shift and go to state 13
    while                          shift and go to state 19
    continue                       shift and go to state 20
    print                          shift and go to state 9
    assign                         shift and go to state 22
    block                          shift and go to state 23
    if                             shift and go to state 6

state 11

    (13) instruction -> return .

    {               reduce using rule 13 (instruction -> return .)
    IF              reduce using rule 13 (instruction -> return .)
    PRINT           reduce using rule 13 (instruction -> return .)
    WHILE           reduce using rule 13 (instruction -> return .)
    FOR             reduce using rule 13 (instruction -> return .)
    BREAK           reduce using rule 13 (instruction -> return .)
    CONTINUE        reduce using rule 13 (instruction -> return .)
    RETURN          reduce using rule 13 (instruction -> return .)
    ID              reduce using rule 13 (instruction -> return .)
    $end            reduce using rule 13 (instruction -> return .)
    }               reduce using rule 13 (instruction -> return .)
    ELSE            reduce using rule 13 (instruction -> return .)


state 12

    (23) for -> FOR . ID = range instruction

    ID              shift and go to state 45


state 13

    (11) instruction -> break .

    {               reduce using rule 11 (instruction -> break .)
    IF              reduce using rule 11 (instruction -> break .)
    PRINT           reduce using rule 11 (instruction -> break .)
    WHILE           reduce using rule 11 (instruction -> break .)
    FOR             reduce using rule 11 (instruction -> break .)
    BREAK           reduce using rule 11 (instruction -> break .)
    CONTINUE        reduce using rule 11 (instruction -> break .)
    RETURN          reduce using rule 11 (instruction -> break .)
    ID              reduce using rule 11 (instruction -> break .)
    $end            reduce using rule 11 (instruction -> break .)
    }               reduce using rule 11 (instruction -> break .)
    ELSE            reduce using rule 11 (instruction -> break .)


state 14

    (1) program -> instructions_opt .

    $end            reduce using rule 1 (program -> instructions_opt .)


state 15

    (29) assign -> ID . = assign
    (30) assign -> ID . = assignment ;
    (31) assign -> ID . ADDASSIGN assignment ;
    (32) assign -> ID . SUBASSIGN assignment ;
    (33) assign -> ID . MULASSIGN assignment ;
    (34) assign -> ID . DIVASSIGN assignment ;
    (35) assign_in_array -> ID . array_range = assign
    (36) assign_in_array -> ID . array_range = assignment ;
    (37) assign_in_array -> ID . array_range ADDASSIGN assignment ;
    (38) assign_in_array -> ID . array_range SUBASSIGN assignment ;
    (39) assign_in_array -> ID . array_range MULASSIGN assignment ;
    (40) assign_in_array -> ID . array_range DIVASSIGN assignment ;
    (41) array_range -> . [ INTNUM , INTNUM ]
    (42) array_range -> . [ INTNUM ]

    =               shift and go to state 52
    ADDASSIGN       shift and go to state 49
    SUBASSIGN       shift and go to state 46
    MULASSIGN       shift and go to state 48
    DIVASSIGN       shift and go to state 51
    [               shift and go to state 50

    array_range                    shift and go to state 47

state 16

    (17) if -> IF . ( assignment ) instruction
    (18) if -> IF . ( assignment ) instruction ELSE instruction

    (               shift and go to state 53


state 17

    (5) instructions -> instruction .

    }               reduce using rule 5 (instructions -> instruction .)
    {               reduce using rule 5 (instructions -> instruction .)
    IF              reduce using rule 5 (instructions -> instruction .)
    PRINT           reduce using rule 5 (instructions -> instruction .)
    WHILE           reduce using rule 5 (instructions -> instruction .)
    FOR             reduce using rule 5 (instructions -> instruction .)
    BREAK           reduce using rule 5 (instructions -> instruction .)
    CONTINUE        reduce using rule 5 (instructions -> instruction .)
    RETURN          reduce using rule 5 (instructions -> instruction .)
    ID              reduce using rule 5 (instructions -> instruction .)
    $end            reduce using rule 5 (instructions -> instruction .)


state 18

    (25) break -> BREAK . ;

    ;               shift and go to state 54


state 19

    (9) instruction -> while .

    {               reduce using rule 9 (instruction -> while .)
    IF              reduce using rule 9 (instruction -> while .)
    PRINT           reduce using rule 9 (instruction -> while .)
    WHILE           reduce using rule 9 (instruction -> while .)
    FOR             reduce using rule 9 (instruction -> while .)
    BREAK           reduce using rule 9 (instruction -> while .)
    CONTINUE        reduce using rule 9 (instruction -> while .)
    RETURN          reduce using rule 9 (instruction -> while .)
    ID              reduce using rule 9 (instruction -> while .)
    $end            reduce using rule 9 (instruction -> while .)
    }               reduce using rule 9 (instruction -> while .)
    ELSE            reduce using rule 9 (instruction -> while .)


state 20

    (12) instruction -> continue .

    {               reduce using rule 12 (instruction -> continue .)
    IF              reduce using rule 12 (instruction -> continue .)
    PRINT           reduce using rule 12 (instruction -> continue .)
    WHILE           reduce using rule 12 (instruction -> continue .)
    FOR             reduce using rule 12 (instruction -> continue .)
    BREAK           reduce using rule 12 (instruction -> continue .)
    CONTINUE        reduce using rule 12 (instruction -> continue .)
    RETURN          reduce using rule 12 (instruction -> continue .)
    ID              reduce using rule 12 (instruction -> continue .)
    $end            reduce using rule 12 (instruction -> continue .)
    }               reduce using rule 12 (instruction -> continue .)
    ELSE            reduce using rule 12 (instruction -> continue .)


state 21

    (16) block -> { . instructions }
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . block
    (7) instruction -> . if
    (8) instruction -> . print
    (9) instruction -> . while
    (10) instruction -> . for
    (11) instruction -> . break
    (12) instruction -> . continue
    (13) instruction -> . return
    (14) instruction -> . assign
    (15) instruction -> . assign_in_array
    (16) block -> . { instructions }
    (17) if -> . IF ( assignment ) instruction
    (18) if -> . IF ( assignment ) instruction ELSE instruction
    (19) print -> . PRINT arguments ;
    (22) while -> . WHILE ( assignment ) instruction
    (23) for -> . FOR ID = range instruction
    (25) break -> . BREAK ;
    (26) continue -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN assignment ;
    (29) assign -> . ID = assign
    (30) assign -> . ID = assignment ;
    (31) assign -> . ID ADDASSIGN assignment ;
    (32) assign -> . ID SUBASSIGN assignment ;
    (33) assign -> . ID MULASSIGN assignment ;
    (34) assign -> . ID DIVASSIGN assignment ;
    (35) assign_in_array -> . ID array_range = assign
    (36) assign_in_array -> . ID array_range = assignment ;
    (37) assign_in_array -> . ID array_range ADDASSIGN assignment ;
    (38) assign_in_array -> . ID array_range SUBASSIGN assignment ;
    (39) assign_in_array -> . ID array_range MULASSIGN assignment ;
    (40) assign_in_array -> . ID array_range DIVASSIGN assignment ;

    {               shift and go to state 21
    IF              shift and go to state 16
    PRINT           shift and go to state 5
    WHILE           shift and go to state 3
    FOR             shift and go to state 12
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 4
    RETURN          shift and go to state 2
    ID              shift and go to state 15

    assign_in_array                shift and go to state 1
    return                         shift and go to state 11
    for                            shift and go to state 7
    instruction                    shift and go to state 17
    break                          shift and go to state 13
    while                          shift and go to state 19
    continue                       shift and go to state 20
    print                          shift and go to state 9
    instructions                   shift and go to state 55
    assign                         shift and go to state 22
    block                          shift and go to state 23
    if                             shift and go to state 6

state 22

    (14) instruction -> assign .

    {               reduce using rule 14 (instruction -> assign .)
    IF              reduce using rule 14 (instruction -> assign .)
    PRINT           reduce using rule 14 (instruction -> assign .)
    WHILE           reduce using rule 14 (instruction -> assign .)
    FOR             reduce using rule 14 (instruction -> assign .)
    BREAK           reduce using rule 14 (instruction -> assign .)
    CONTINUE        reduce using rule 14 (instruction -> assign .)
    RETURN          reduce using rule 14 (instruction -> assign .)
    ID              reduce using rule 14 (instruction -> assign .)
    $end            reduce using rule 14 (instruction -> assign .)
    }               reduce using rule 14 (instruction -> assign .)
    ELSE            reduce using rule 14 (instruction -> assign .)


state 23

    (6) instruction -> block .

    {               reduce using rule 6 (instruction -> block .)
    IF              reduce using rule 6 (instruction -> block .)
    PRINT           reduce using rule 6 (instruction -> block .)
    WHILE           reduce using rule 6 (instruction -> block .)
    FOR             reduce using rule 6 (instruction -> block .)
    BREAK           reduce using rule 6 (instruction -> block .)
    CONTINUE        reduce using rule 6 (instruction -> block .)
    RETURN          reduce using rule 6 (instruction -> block .)
    ID              reduce using rule 6 (instruction -> block .)
    $end            reduce using rule 6 (instruction -> block .)
    }               reduce using rule 6 (instruction -> block .)
    ELSE            reduce using rule 6 (instruction -> block .)


state 24

    (44) assignment -> matrix_initialization .

    ,               reduce using rule 44 (assignment -> matrix_initialization .)
    ;               reduce using rule 44 (assignment -> matrix_initialization .)
    )               reduce using rule 44 (assignment -> matrix_initialization .)


state 25

    (47) assignment -> array .

    ,               reduce using rule 47 (assignment -> array .)
    ;               reduce using rule 47 (assignment -> array .)
    )               reduce using rule 47 (assignment -> array .)


state 26

    (77) number -> INTNUM .

    +               reduce using rule 77 (number -> INTNUM .)
    -               reduce using rule 77 (number -> INTNUM .)
    *               reduce using rule 77 (number -> INTNUM .)
    /               reduce using rule 77 (number -> INTNUM .)
    DOTADD          reduce using rule 77 (number -> INTNUM .)
    DOTSUB          reduce using rule 77 (number -> INTNUM .)
    DOTMUL          reduce using rule 77 (number -> INTNUM .)
    DOTDIV          reduce using rule 77 (number -> INTNUM .)
    <               reduce using rule 77 (number -> INTNUM .)
    >               reduce using rule 77 (number -> INTNUM .)
    LESSEQUAL       reduce using rule 77 (number -> INTNUM .)
    MOREEQUAL       reduce using rule 77 (number -> INTNUM .)
    EQUAL           reduce using rule 77 (number -> INTNUM .)
    NOTEQUAL        reduce using rule 77 (number -> INTNUM .)
    ;               reduce using rule 77 (number -> INTNUM .)
    ,               reduce using rule 77 (number -> INTNUM .)
    )               reduce using rule 77 (number -> INTNUM .)
    :               reduce using rule 77 (number -> INTNUM .)
    {               reduce using rule 77 (number -> INTNUM .)
    IF              reduce using rule 77 (number -> INTNUM .)
    PRINT           reduce using rule 77 (number -> INTNUM .)
    WHILE           reduce using rule 77 (number -> INTNUM .)
    FOR             reduce using rule 77 (number -> INTNUM .)
    BREAK           reduce using rule 77 (number -> INTNUM .)
    CONTINUE        reduce using rule 77 (number -> INTNUM .)
    RETURN          reduce using rule 77 (number -> INTNUM .)
    ID              reduce using rule 77 (number -> INTNUM .)
    ]               reduce using rule 77 (number -> INTNUM .)


state 27

    (70) expression -> number .

    +               reduce using rule 70 (expression -> number .)
    -               reduce using rule 70 (expression -> number .)
    *               reduce using rule 70 (expression -> number .)
    /               reduce using rule 70 (expression -> number .)
    DOTADD          reduce using rule 70 (expression -> number .)
    DOTSUB          reduce using rule 70 (expression -> number .)
    DOTMUL          reduce using rule 70 (expression -> number .)
    DOTDIV          reduce using rule 70 (expression -> number .)
    <               reduce using rule 70 (expression -> number .)
    >               reduce using rule 70 (expression -> number .)
    LESSEQUAL       reduce using rule 70 (expression -> number .)
    MOREEQUAL       reduce using rule 70 (expression -> number .)
    EQUAL           reduce using rule 70 (expression -> number .)
    NOTEQUAL        reduce using rule 70 (expression -> number .)
    ;               reduce using rule 70 (expression -> number .)
    ,               reduce using rule 70 (expression -> number .)
    )               reduce using rule 70 (expression -> number .)
    :               reduce using rule 70 (expression -> number .)
    {               reduce using rule 70 (expression -> number .)
    IF              reduce using rule 70 (expression -> number .)
    PRINT           reduce using rule 70 (expression -> number .)
    WHILE           reduce using rule 70 (expression -> number .)
    FOR             reduce using rule 70 (expression -> number .)
    BREAK           reduce using rule 70 (expression -> number .)
    CONTINUE        reduce using rule 70 (expression -> number .)
    RETURN          reduce using rule 70 (expression -> number .)
    ID              reduce using rule 70 (expression -> number .)


state 28

    (73) expression -> - . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    ID              shift and go to state 37
    -               shift and go to state 28
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    expression                     shift and go to state 56
    number                         shift and go to state 27

state 29

    (45) assignment -> relational_expression .

    ,               reduce using rule 45 (assignment -> relational_expression .)
    ;               reduce using rule 45 (assignment -> relational_expression .)
    )               reduce using rule 45 (assignment -> relational_expression .)


state 30

    (27) return -> RETURN ; .

    {               reduce using rule 27 (return -> RETURN ; .)
    IF              reduce using rule 27 (return -> RETURN ; .)
    PRINT           reduce using rule 27 (return -> RETURN ; .)
    WHILE           reduce using rule 27 (return -> RETURN ; .)
    FOR             reduce using rule 27 (return -> RETURN ; .)
    BREAK           reduce using rule 27 (return -> RETURN ; .)
    CONTINUE        reduce using rule 27 (return -> RETURN ; .)
    RETURN          reduce using rule 27 (return -> RETURN ; .)
    ID              reduce using rule 27 (return -> RETURN ; .)
    $end            reduce using rule 27 (return -> RETURN ; .)
    }               reduce using rule 27 (return -> RETURN ; .)
    ELSE            reduce using rule 27 (return -> RETURN ; .)


state 31

    (74) matrix_initialization -> EYE . ( INTNUM )

    (               shift and go to state 57


state 32

    (43) assignment -> STRING .

    ,               reduce using rule 43 (assignment -> STRING .)
    ;               reduce using rule 43 (assignment -> STRING .)
    )               reduce using rule 43 (assignment -> STRING .)


state 33

    (28) return -> RETURN assignment . ;

    ;               shift and go to state 58


state 34

    (76) matrix_initialization -> ONES . ( INTNUM )

    (               shift and go to state 59


state 35

    (75) matrix_initialization -> ZEROS . ( INTNUM )

    (               shift and go to state 60


state 36

    (48) array -> [ . ]
    (49) array -> [ . dimensions ]
    (50) dimensions -> . values
    (51) dimensions -> . values ; dimensions
    (52) values -> . value
    (53) values -> . value , values
    (54) value -> . STRING
    (55) value -> . number
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    ]               shift and go to state 65
    STRING          shift and go to state 66
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    values                         shift and go to state 64
    dimensions                     shift and go to state 61
    value                          shift and go to state 62
    number                         shift and go to state 63

state 37

    (71) expression -> ID .
    (72) expression -> ID . TRANSPOSE

    +               reduce using rule 71 (expression -> ID .)
    -               reduce using rule 71 (expression -> ID .)
    *               reduce using rule 71 (expression -> ID .)
    /               reduce using rule 71 (expression -> ID .)
    DOTADD          reduce using rule 71 (expression -> ID .)
    DOTSUB          reduce using rule 71 (expression -> ID .)
    DOTMUL          reduce using rule 71 (expression -> ID .)
    DOTDIV          reduce using rule 71 (expression -> ID .)
    <               reduce using rule 71 (expression -> ID .)
    >               reduce using rule 71 (expression -> ID .)
    LESSEQUAL       reduce using rule 71 (expression -> ID .)
    MOREEQUAL       reduce using rule 71 (expression -> ID .)
    EQUAL           reduce using rule 71 (expression -> ID .)
    NOTEQUAL        reduce using rule 71 (expression -> ID .)
    ;               reduce using rule 71 (expression -> ID .)
    ,               reduce using rule 71 (expression -> ID .)
    )               reduce using rule 71 (expression -> ID .)
    :               reduce using rule 71 (expression -> ID .)
    {               reduce using rule 71 (expression -> ID .)
    IF              reduce using rule 71 (expression -> ID .)
    PRINT           reduce using rule 71 (expression -> ID .)
    WHILE           reduce using rule 71 (expression -> ID .)
    FOR             reduce using rule 71 (expression -> ID .)
    BREAK           reduce using rule 71 (expression -> ID .)
    CONTINUE        reduce using rule 71 (expression -> ID .)
    RETURN          reduce using rule 71 (expression -> ID .)
    ID              reduce using rule 71 (expression -> ID .)
    TRANSPOSE       shift and go to state 67


state 38

    (78) number -> FLOAT .

    +               reduce using rule 78 (number -> FLOAT .)
    -               reduce using rule 78 (number -> FLOAT .)
    *               reduce using rule 78 (number -> FLOAT .)
    /               reduce using rule 78 (number -> FLOAT .)
    DOTADD          reduce using rule 78 (number -> FLOAT .)
    DOTSUB          reduce using rule 78 (number -> FLOAT .)
    DOTMUL          reduce using rule 78 (number -> FLOAT .)
    DOTDIV          reduce using rule 78 (number -> FLOAT .)
    <               reduce using rule 78 (number -> FLOAT .)
    >               reduce using rule 78 (number -> FLOAT .)
    LESSEQUAL       reduce using rule 78 (number -> FLOAT .)
    MOREEQUAL       reduce using rule 78 (number -> FLOAT .)
    EQUAL           reduce using rule 78 (number -> FLOAT .)
    NOTEQUAL        reduce using rule 78 (number -> FLOAT .)
    ;               reduce using rule 78 (number -> FLOAT .)
    ,               reduce using rule 78 (number -> FLOAT .)
    )               reduce using rule 78 (number -> FLOAT .)
    :               reduce using rule 78 (number -> FLOAT .)
    {               reduce using rule 78 (number -> FLOAT .)
    IF              reduce using rule 78 (number -> FLOAT .)
    PRINT           reduce using rule 78 (number -> FLOAT .)
    WHILE           reduce using rule 78 (number -> FLOAT .)
    FOR             reduce using rule 78 (number -> FLOAT .)
    BREAK           reduce using rule 78 (number -> FLOAT .)
    CONTINUE        reduce using rule 78 (number -> FLOAT .)
    RETURN          reduce using rule 78 (number -> FLOAT .)
    ID              reduce using rule 78 (number -> FLOAT .)
    ]               reduce using rule 78 (number -> FLOAT .)


state 39

    (46) assignment -> expression .
    (56) relational_expression -> expression . < expression
    (57) relational_expression -> expression . > expression
    (58) relational_expression -> expression . LESSEQUAL expression
    (59) relational_expression -> expression . MOREEQUAL expression
    (60) relational_expression -> expression . EQUAL expression
    (61) relational_expression -> expression . NOTEQUAL expression
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTADD expression
    (67) expression -> expression . DOTSUB expression
    (68) expression -> expression . DOTMUL expression
    (69) expression -> expression . DOTDIV expression

    ,               reduce using rule 46 (assignment -> expression .)
    ;               reduce using rule 46 (assignment -> expression .)
    )               reduce using rule 46 (assignment -> expression .)
    <               shift and go to state 80
    >               shift and go to state 81
    LESSEQUAL       shift and go to state 78
    MOREEQUAL       shift and go to state 68
    EQUAL           shift and go to state 74
    NOTEQUAL        shift and go to state 69
    +               shift and go to state 71
    -               shift and go to state 73
    *               shift and go to state 72
    /               shift and go to state 75
    DOTADD          shift and go to state 77
    DOTSUB          shift and go to state 76
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 70


state 40

    (22) while -> WHILE ( . assignment ) instruction
    (43) assignment -> . STRING
    (44) assignment -> . matrix_initialization
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_initialization -> . EYE ( INTNUM )
    (75) matrix_initialization -> . ZEROS ( INTNUM )
    (76) matrix_initialization -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression MOREEQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    STRING          shift and go to state 32
    EYE             shift and go to state 31
    ZEROS           shift and go to state 35
    ONES            shift and go to state 34
    ID              shift and go to state 37
    -               shift and go to state 28
    [               shift and go to state 36
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    matrix_initialization          shift and go to state 24
    assignment                     shift and go to state 82
    number                         shift and go to state 27
    relational_expression          shift and go to state 29
    array                          shift and go to state 25
    expression                     shift and go to state 39

state 41

    (26) continue -> CONTINUE ; .

    {               reduce using rule 26 (continue -> CONTINUE ; .)
    IF              reduce using rule 26 (continue -> CONTINUE ; .)
    PRINT           reduce using rule 26 (continue -> CONTINUE ; .)
    WHILE           reduce using rule 26 (continue -> CONTINUE ; .)
    FOR             reduce using rule 26 (continue -> CONTINUE ; .)
    BREAK           reduce using rule 26 (continue -> CONTINUE ; .)
    CONTINUE        reduce using rule 26 (continue -> CONTINUE ; .)
    RETURN          reduce using rule 26 (continue -> CONTINUE ; .)
    ID              reduce using rule 26 (continue -> CONTINUE ; .)
    $end            reduce using rule 26 (continue -> CONTINUE ; .)
    }               reduce using rule 26 (continue -> CONTINUE ; .)
    ELSE            reduce using rule 26 (continue -> CONTINUE ; .)


state 42

    (19) print -> PRINT arguments . ;

    ;               shift and go to state 83


state 43

    (20) arguments -> assignment .
    (21) arguments -> assignment . , arguments

    ;               reduce using rule 20 (arguments -> assignment .)
    ,               shift and go to state 84


state 44

    (4) instructions -> instructions instruction .

    }               reduce using rule 4 (instructions -> instructions instruction .)
    {               reduce using rule 4 (instructions -> instructions instruction .)
    IF              reduce using rule 4 (instructions -> instructions instruction .)
    PRINT           reduce using rule 4 (instructions -> instructions instruction .)
    WHILE           reduce using rule 4 (instructions -> instructions instruction .)
    FOR             reduce using rule 4 (instructions -> instructions instruction .)
    BREAK           reduce using rule 4 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 4 (instructions -> instructions instruction .)
    RETURN          reduce using rule 4 (instructions -> instructions instruction .)
    ID              reduce using rule 4 (instructions -> instructions instruction .)
    $end            reduce using rule 4 (instructions -> instructions instruction .)


state 45

    (23) for -> FOR ID . = range instruction

    =               shift and go to state 85


state 46

    (32) assign -> ID SUBASSIGN . assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_initialization
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_initialization -> . EYE ( INTNUM )
    (75) matrix_initialization -> . ZEROS ( INTNUM )
    (76) matrix_initialization -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression MOREEQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    STRING          shift and go to state 32
    EYE             shift and go to state 31
    ZEROS           shift and go to state 35
    ONES            shift and go to state 34
    ID              shift and go to state 37
    -               shift and go to state 28
    [               shift and go to state 36
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    matrix_initialization          shift and go to state 24
    assignment                     shift and go to state 86
    number                         shift and go to state 27
    relational_expression          shift and go to state 29
    array                          shift and go to state 25
    expression                     shift and go to state 39

state 47

    (35) assign_in_array -> ID array_range . = assign
    (36) assign_in_array -> ID array_range . = assignment ;
    (37) assign_in_array -> ID array_range . ADDASSIGN assignment ;
    (38) assign_in_array -> ID array_range . SUBASSIGN assignment ;
    (39) assign_in_array -> ID array_range . MULASSIGN assignment ;
    (40) assign_in_array -> ID array_range . DIVASSIGN assignment ;

    =               shift and go to state 91
    ADDASSIGN       shift and go to state 89
    SUBASSIGN       shift and go to state 87
    MULASSIGN       shift and go to state 88
    DIVASSIGN       shift and go to state 90


state 48

    (33) assign -> ID MULASSIGN . assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_initialization
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_initialization -> . EYE ( INTNUM )
    (75) matrix_initialization -> . ZEROS ( INTNUM )
    (76) matrix_initialization -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression MOREEQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    STRING          shift and go to state 32
    EYE             shift and go to state 31
    ZEROS           shift and go to state 35
    ONES            shift and go to state 34
    ID              shift and go to state 37
    -               shift and go to state 28
    [               shift and go to state 36
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    matrix_initialization          shift and go to state 24
    assignment                     shift and go to state 92
    number                         shift and go to state 27
    relational_expression          shift and go to state 29
    array                          shift and go to state 25
    expression                     shift and go to state 39

state 49

    (31) assign -> ID ADDASSIGN . assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_initialization
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_initialization -> . EYE ( INTNUM )
    (75) matrix_initialization -> . ZEROS ( INTNUM )
    (76) matrix_initialization -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression MOREEQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    STRING          shift and go to state 32
    EYE             shift and go to state 31
    ZEROS           shift and go to state 35
    ONES            shift and go to state 34
    ID              shift and go to state 37
    -               shift and go to state 28
    [               shift and go to state 36
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    matrix_initialization          shift and go to state 24
    assignment                     shift and go to state 93
    number                         shift and go to state 27
    relational_expression          shift and go to state 29
    array                          shift and go to state 25
    expression                     shift and go to state 39

state 50

    (41) array_range -> [ . INTNUM , INTNUM ]
    (42) array_range -> [ . INTNUM ]

    INTNUM          shift and go to state 94


state 51

    (34) assign -> ID DIVASSIGN . assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_initialization
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_initialization -> . EYE ( INTNUM )
    (75) matrix_initialization -> . ZEROS ( INTNUM )
    (76) matrix_initialization -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression MOREEQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    STRING          shift and go to state 32
    EYE             shift and go to state 31
    ZEROS           shift and go to state 35
    ONES            shift and go to state 34
    ID              shift and go to state 37
    -               shift and go to state 28
    [               shift and go to state 36
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    matrix_initialization          shift and go to state 24
    assignment                     shift and go to state 95
    number                         shift and go to state 27
    relational_expression          shift and go to state 29
    array                          shift and go to state 25
    expression                     shift and go to state 39

state 52

    (29) assign -> ID = . assign
    (30) assign -> ID = . assignment ;
    (29) assign -> . ID = assign
    (30) assign -> . ID = assignment ;
    (31) assign -> . ID ADDASSIGN assignment ;
    (32) assign -> . ID SUBASSIGN assignment ;
    (33) assign -> . ID MULASSIGN assignment ;
    (34) assign -> . ID DIVASSIGN assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_initialization
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_initialization -> . EYE ( INTNUM )
    (75) matrix_initialization -> . ZEROS ( INTNUM )
    (76) matrix_initialization -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression MOREEQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    ID              shift and go to state 97
    STRING          shift and go to state 32
    EYE             shift and go to state 31
    ZEROS           shift and go to state 35
    ONES            shift and go to state 34
    -               shift and go to state 28
    [               shift and go to state 36
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    matrix_initialization          shift and go to state 24
    assignment                     shift and go to state 96
    number                         shift and go to state 27
    relational_expression          shift and go to state 29
    array                          shift and go to state 25
    expression                     shift and go to state 39
    assign                         shift and go to state 98

state 53

    (17) if -> IF ( . assignment ) instruction
    (18) if -> IF ( . assignment ) instruction ELSE instruction
    (43) assignment -> . STRING
    (44) assignment -> . matrix_initialization
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_initialization -> . EYE ( INTNUM )
    (75) matrix_initialization -> . ZEROS ( INTNUM )
    (76) matrix_initialization -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression MOREEQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    STRING          shift and go to state 32
    EYE             shift and go to state 31
    ZEROS           shift and go to state 35
    ONES            shift and go to state 34
    ID              shift and go to state 37
    -               shift and go to state 28
    [               shift and go to state 36
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    matrix_initialization          shift and go to state 24
    assignment                     shift and go to state 99
    number                         shift and go to state 27
    relational_expression          shift and go to state 29
    array                          shift and go to state 25
    expression                     shift and go to state 39

state 54

    (25) break -> BREAK ; .

    {               reduce using rule 25 (break -> BREAK ; .)
    IF              reduce using rule 25 (break -> BREAK ; .)
    PRINT           reduce using rule 25 (break -> BREAK ; .)
    WHILE           reduce using rule 25 (break -> BREAK ; .)
    FOR             reduce using rule 25 (break -> BREAK ; .)
    BREAK           reduce using rule 25 (break -> BREAK ; .)
    CONTINUE        reduce using rule 25 (break -> BREAK ; .)
    RETURN          reduce using rule 25 (break -> BREAK ; .)
    ID              reduce using rule 25 (break -> BREAK ; .)
    $end            reduce using rule 25 (break -> BREAK ; .)
    }               reduce using rule 25 (break -> BREAK ; .)
    ELSE            reduce using rule 25 (break -> BREAK ; .)


state 55

    (16) block -> { instructions . }
    (4) instructions -> instructions . instruction
    (6) instruction -> . block
    (7) instruction -> . if
    (8) instruction -> . print
    (9) instruction -> . while
    (10) instruction -> . for
    (11) instruction -> . break
    (12) instruction -> . continue
    (13) instruction -> . return
    (14) instruction -> . assign
    (15) instruction -> . assign_in_array
    (16) block -> . { instructions }
    (17) if -> . IF ( assignment ) instruction
    (18) if -> . IF ( assignment ) instruction ELSE instruction
    (19) print -> . PRINT arguments ;
    (22) while -> . WHILE ( assignment ) instruction
    (23) for -> . FOR ID = range instruction
    (25) break -> . BREAK ;
    (26) continue -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN assignment ;
    (29) assign -> . ID = assign
    (30) assign -> . ID = assignment ;
    (31) assign -> . ID ADDASSIGN assignment ;
    (32) assign -> . ID SUBASSIGN assignment ;
    (33) assign -> . ID MULASSIGN assignment ;
    (34) assign -> . ID DIVASSIGN assignment ;
    (35) assign_in_array -> . ID array_range = assign
    (36) assign_in_array -> . ID array_range = assignment ;
    (37) assign_in_array -> . ID array_range ADDASSIGN assignment ;
    (38) assign_in_array -> . ID array_range SUBASSIGN assignment ;
    (39) assign_in_array -> . ID array_range MULASSIGN assignment ;
    (40) assign_in_array -> . ID array_range DIVASSIGN assignment ;

    }               shift and go to state 100
    {               shift and go to state 21
    IF              shift and go to state 16
    PRINT           shift and go to state 5
    WHILE           shift and go to state 3
    FOR             shift and go to state 12
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 4
    RETURN          shift and go to state 2
    ID              shift and go to state 15

    assign_in_array                shift and go to state 1
    return                         shift and go to state 11
    for                            shift and go to state 7
    instruction                    shift and go to state 44
    break                          shift and go to state 13
    while                          shift and go to state 19
    continue                       shift and go to state 20
    print                          shift and go to state 9
    assign                         shift and go to state 22
    block                          shift and go to state 23
    if                             shift and go to state 6

state 56

    (73) expression -> - expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTADD expression
    (67) expression -> expression . DOTSUB expression
    (68) expression -> expression . DOTMUL expression
    (69) expression -> expression . DOTDIV expression

    +               reduce using rule 73 (expression -> - expression .)
    -               reduce using rule 73 (expression -> - expression .)
    *               reduce using rule 73 (expression -> - expression .)
    /               reduce using rule 73 (expression -> - expression .)
    DOTADD          reduce using rule 73 (expression -> - expression .)
    DOTSUB          reduce using rule 73 (expression -> - expression .)
    DOTMUL          reduce using rule 73 (expression -> - expression .)
    DOTDIV          reduce using rule 73 (expression -> - expression .)
    <               reduce using rule 73 (expression -> - expression .)
    >               reduce using rule 73 (expression -> - expression .)
    LESSEQUAL       reduce using rule 73 (expression -> - expression .)
    MOREEQUAL       reduce using rule 73 (expression -> - expression .)
    EQUAL           reduce using rule 73 (expression -> - expression .)
    NOTEQUAL        reduce using rule 73 (expression -> - expression .)
    ;               reduce using rule 73 (expression -> - expression .)
    ,               reduce using rule 73 (expression -> - expression .)
    )               reduce using rule 73 (expression -> - expression .)
    :               reduce using rule 73 (expression -> - expression .)
    {               reduce using rule 73 (expression -> - expression .)
    IF              reduce using rule 73 (expression -> - expression .)
    PRINT           reduce using rule 73 (expression -> - expression .)
    WHILE           reduce using rule 73 (expression -> - expression .)
    FOR             reduce using rule 73 (expression -> - expression .)
    BREAK           reduce using rule 73 (expression -> - expression .)
    CONTINUE        reduce using rule 73 (expression -> - expression .)
    RETURN          reduce using rule 73 (expression -> - expression .)
    ID              reduce using rule 73 (expression -> - expression .)

  ! +               [ shift and go to state 71 ]
  ! -               [ shift and go to state 73 ]
  ! *               [ shift and go to state 72 ]
  ! /               [ shift and go to state 75 ]
  ! DOTADD          [ shift and go to state 77 ]
  ! DOTSUB          [ shift and go to state 76 ]
  ! DOTMUL          [ shift and go to state 79 ]
  ! DOTDIV          [ shift and go to state 70 ]


state 57

    (74) matrix_initialization -> EYE ( . INTNUM )

    INTNUM          shift and go to state 101


state 58

    (28) return -> RETURN assignment ; .

    {               reduce using rule 28 (return -> RETURN assignment ; .)
    IF              reduce using rule 28 (return -> RETURN assignment ; .)
    PRINT           reduce using rule 28 (return -> RETURN assignment ; .)
    WHILE           reduce using rule 28 (return -> RETURN assignment ; .)
    FOR             reduce using rule 28 (return -> RETURN assignment ; .)
    BREAK           reduce using rule 28 (return -> RETURN assignment ; .)
    CONTINUE        reduce using rule 28 (return -> RETURN assignment ; .)
    RETURN          reduce using rule 28 (return -> RETURN assignment ; .)
    ID              reduce using rule 28 (return -> RETURN assignment ; .)
    $end            reduce using rule 28 (return -> RETURN assignment ; .)
    }               reduce using rule 28 (return -> RETURN assignment ; .)
    ELSE            reduce using rule 28 (return -> RETURN assignment ; .)


state 59

    (76) matrix_initialization -> ONES ( . INTNUM )

    INTNUM          shift and go to state 102


state 60

    (75) matrix_initialization -> ZEROS ( . INTNUM )

    INTNUM          shift and go to state 103


state 61

    (49) array -> [ dimensions . ]

    ]               shift and go to state 104


state 62

    (52) values -> value .
    (53) values -> value . , values

    ;               reduce using rule 52 (values -> value .)
    ]               reduce using rule 52 (values -> value .)
    ,               shift and go to state 105


state 63

    (55) value -> number .

    ,               reduce using rule 55 (value -> number .)
    ;               reduce using rule 55 (value -> number .)
    ]               reduce using rule 55 (value -> number .)


state 64

    (50) dimensions -> values .
    (51) dimensions -> values . ; dimensions

    ]               reduce using rule 50 (dimensions -> values .)
    ;               shift and go to state 106


state 65

    (48) array -> [ ] .

    ,               reduce using rule 48 (array -> [ ] .)
    ;               reduce using rule 48 (array -> [ ] .)
    )               reduce using rule 48 (array -> [ ] .)


state 66

    (54) value -> STRING .

    ,               reduce using rule 54 (value -> STRING .)
    ;               reduce using rule 54 (value -> STRING .)
    ]               reduce using rule 54 (value -> STRING .)


state 67

    (72) expression -> ID TRANSPOSE .

    +               reduce using rule 72 (expression -> ID TRANSPOSE .)
    -               reduce using rule 72 (expression -> ID TRANSPOSE .)
    *               reduce using rule 72 (expression -> ID TRANSPOSE .)
    /               reduce using rule 72 (expression -> ID TRANSPOSE .)
    DOTADD          reduce using rule 72 (expression -> ID TRANSPOSE .)
    DOTSUB          reduce using rule 72 (expression -> ID TRANSPOSE .)
    DOTMUL          reduce using rule 72 (expression -> ID TRANSPOSE .)
    DOTDIV          reduce using rule 72 (expression -> ID TRANSPOSE .)
    <               reduce using rule 72 (expression -> ID TRANSPOSE .)
    >               reduce using rule 72 (expression -> ID TRANSPOSE .)
    LESSEQUAL       reduce using rule 72 (expression -> ID TRANSPOSE .)
    MOREEQUAL       reduce using rule 72 (expression -> ID TRANSPOSE .)
    EQUAL           reduce using rule 72 (expression -> ID TRANSPOSE .)
    NOTEQUAL        reduce using rule 72 (expression -> ID TRANSPOSE .)
    ;               reduce using rule 72 (expression -> ID TRANSPOSE .)
    ,               reduce using rule 72 (expression -> ID TRANSPOSE .)
    )               reduce using rule 72 (expression -> ID TRANSPOSE .)
    :               reduce using rule 72 (expression -> ID TRANSPOSE .)
    {               reduce using rule 72 (expression -> ID TRANSPOSE .)
    IF              reduce using rule 72 (expression -> ID TRANSPOSE .)
    PRINT           reduce using rule 72 (expression -> ID TRANSPOSE .)
    WHILE           reduce using rule 72 (expression -> ID TRANSPOSE .)
    FOR             reduce using rule 72 (expression -> ID TRANSPOSE .)
    BREAK           reduce using rule 72 (expression -> ID TRANSPOSE .)
    CONTINUE        reduce using rule 72 (expression -> ID TRANSPOSE .)
    RETURN          reduce using rule 72 (expression -> ID TRANSPOSE .)
    ID              reduce using rule 72 (expression -> ID TRANSPOSE .)


state 68

    (59) relational_expression -> expression MOREEQUAL . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    ID              shift and go to state 37
    -               shift and go to state 28
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    expression                     shift and go to state 107
    number                         shift and go to state 27

state 69

    (61) relational_expression -> expression NOTEQUAL . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    ID              shift and go to state 37
    -               shift and go to state 28
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    expression                     shift and go to state 108
    number                         shift and go to state 27

state 70

    (69) expression -> expression DOTDIV . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    ID              shift and go to state 37
    -               shift and go to state 28
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    expression                     shift and go to state 109
    number                         shift and go to state 27

state 71

    (62) expression -> expression + . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    ID              shift and go to state 37
    -               shift and go to state 28
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    expression                     shift and go to state 110
    number                         shift and go to state 27

state 72

    (64) expression -> expression * . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    ID              shift and go to state 37
    -               shift and go to state 28
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    expression                     shift and go to state 111
    number                         shift and go to state 27

state 73

    (63) expression -> expression - . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    ID              shift and go to state 37
    -               shift and go to state 28
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    expression                     shift and go to state 112
    number                         shift and go to state 27

state 74

    (60) relational_expression -> expression EQUAL . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    ID              shift and go to state 37
    -               shift and go to state 28
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    expression                     shift and go to state 113
    number                         shift and go to state 27

state 75

    (65) expression -> expression / . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    ID              shift and go to state 37
    -               shift and go to state 28
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    expression                     shift and go to state 114
    number                         shift and go to state 27

state 76

    (67) expression -> expression DOTSUB . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    ID              shift and go to state 37
    -               shift and go to state 28
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    expression                     shift and go to state 115
    number                         shift and go to state 27

state 77

    (66) expression -> expression DOTADD . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    ID              shift and go to state 37
    -               shift and go to state 28
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    expression                     shift and go to state 116
    number                         shift and go to state 27

state 78

    (58) relational_expression -> expression LESSEQUAL . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    ID              shift and go to state 37
    -               shift and go to state 28
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    expression                     shift and go to state 117
    number                         shift and go to state 27

state 79

    (68) expression -> expression DOTMUL . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    ID              shift and go to state 37
    -               shift and go to state 28
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    expression                     shift and go to state 118
    number                         shift and go to state 27

state 80

    (56) relational_expression -> expression < . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    ID              shift and go to state 37
    -               shift and go to state 28
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    expression                     shift and go to state 119
    number                         shift and go to state 27

state 81

    (57) relational_expression -> expression > . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    ID              shift and go to state 37
    -               shift and go to state 28
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    expression                     shift and go to state 120
    number                         shift and go to state 27

state 82

    (22) while -> WHILE ( assignment . ) instruction

    )               shift and go to state 121


state 83

    (19) print -> PRINT arguments ; .

    {               reduce using rule 19 (print -> PRINT arguments ; .)
    IF              reduce using rule 19 (print -> PRINT arguments ; .)
    PRINT           reduce using rule 19 (print -> PRINT arguments ; .)
    WHILE           reduce using rule 19 (print -> PRINT arguments ; .)
    FOR             reduce using rule 19 (print -> PRINT arguments ; .)
    BREAK           reduce using rule 19 (print -> PRINT arguments ; .)
    CONTINUE        reduce using rule 19 (print -> PRINT arguments ; .)
    RETURN          reduce using rule 19 (print -> PRINT arguments ; .)
    ID              reduce using rule 19 (print -> PRINT arguments ; .)
    $end            reduce using rule 19 (print -> PRINT arguments ; .)
    }               reduce using rule 19 (print -> PRINT arguments ; .)
    ELSE            reduce using rule 19 (print -> PRINT arguments ; .)


state 84

    (21) arguments -> assignment , . arguments
    (20) arguments -> . assignment
    (21) arguments -> . assignment , arguments
    (43) assignment -> . STRING
    (44) assignment -> . matrix_initialization
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_initialization -> . EYE ( INTNUM )
    (75) matrix_initialization -> . ZEROS ( INTNUM )
    (76) matrix_initialization -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression MOREEQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    STRING          shift and go to state 32
    EYE             shift and go to state 31
    ZEROS           shift and go to state 35
    ONES            shift and go to state 34
    ID              shift and go to state 37
    -               shift and go to state 28
    [               shift and go to state 36
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    matrix_initialization          shift and go to state 24
    assignment                     shift and go to state 43
    number                         shift and go to state 27
    relational_expression          shift and go to state 29
    array                          shift and go to state 25
    expression                     shift and go to state 39
    arguments                      shift and go to state 122

state 85

    (23) for -> FOR ID = . range instruction
    (24) range -> . expression : expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    ID              shift and go to state 37
    -               shift and go to state 28
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    range                          shift and go to state 123
    expression                     shift and go to state 124
    number                         shift and go to state 27

state 86

    (32) assign -> ID SUBASSIGN assignment . ;

    ;               shift and go to state 125


state 87

    (38) assign_in_array -> ID array_range SUBASSIGN . assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_initialization
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_initialization -> . EYE ( INTNUM )
    (75) matrix_initialization -> . ZEROS ( INTNUM )
    (76) matrix_initialization -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression MOREEQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    STRING          shift and go to state 32
    EYE             shift and go to state 31
    ZEROS           shift and go to state 35
    ONES            shift and go to state 34
    ID              shift and go to state 37
    -               shift and go to state 28
    [               shift and go to state 36
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    matrix_initialization          shift and go to state 24
    assignment                     shift and go to state 126
    number                         shift and go to state 27
    relational_expression          shift and go to state 29
    array                          shift and go to state 25
    expression                     shift and go to state 39

state 88

    (39) assign_in_array -> ID array_range MULASSIGN . assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_initialization
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_initialization -> . EYE ( INTNUM )
    (75) matrix_initialization -> . ZEROS ( INTNUM )
    (76) matrix_initialization -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression MOREEQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    STRING          shift and go to state 32
    EYE             shift and go to state 31
    ZEROS           shift and go to state 35
    ONES            shift and go to state 34
    ID              shift and go to state 37
    -               shift and go to state 28
    [               shift and go to state 36
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    matrix_initialization          shift and go to state 24
    assignment                     shift and go to state 127
    number                         shift and go to state 27
    relational_expression          shift and go to state 29
    array                          shift and go to state 25
    expression                     shift and go to state 39

state 89

    (37) assign_in_array -> ID array_range ADDASSIGN . assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_initialization
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_initialization -> . EYE ( INTNUM )
    (75) matrix_initialization -> . ZEROS ( INTNUM )
    (76) matrix_initialization -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression MOREEQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    STRING          shift and go to state 32
    EYE             shift and go to state 31
    ZEROS           shift and go to state 35
    ONES            shift and go to state 34
    ID              shift and go to state 37
    -               shift and go to state 28
    [               shift and go to state 36
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    matrix_initialization          shift and go to state 24
    assignment                     shift and go to state 128
    number                         shift and go to state 27
    relational_expression          shift and go to state 29
    array                          shift and go to state 25
    expression                     shift and go to state 39

state 90

    (40) assign_in_array -> ID array_range DIVASSIGN . assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_initialization
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_initialization -> . EYE ( INTNUM )
    (75) matrix_initialization -> . ZEROS ( INTNUM )
    (76) matrix_initialization -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression MOREEQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    STRING          shift and go to state 32
    EYE             shift and go to state 31
    ZEROS           shift and go to state 35
    ONES            shift and go to state 34
    ID              shift and go to state 37
    -               shift and go to state 28
    [               shift and go to state 36
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    matrix_initialization          shift and go to state 24
    assignment                     shift and go to state 129
    number                         shift and go to state 27
    relational_expression          shift and go to state 29
    array                          shift and go to state 25
    expression                     shift and go to state 39

state 91

    (35) assign_in_array -> ID array_range = . assign
    (36) assign_in_array -> ID array_range = . assignment ;
    (29) assign -> . ID = assign
    (30) assign -> . ID = assignment ;
    (31) assign -> . ID ADDASSIGN assignment ;
    (32) assign -> . ID SUBASSIGN assignment ;
    (33) assign -> . ID MULASSIGN assignment ;
    (34) assign -> . ID DIVASSIGN assignment ;
    (43) assignment -> . STRING
    (44) assignment -> . matrix_initialization
    (45) assignment -> . relational_expression
    (46) assignment -> . expression
    (47) assignment -> . array
    (74) matrix_initialization -> . EYE ( INTNUM )
    (75) matrix_initialization -> . ZEROS ( INTNUM )
    (76) matrix_initialization -> . ONES ( INTNUM )
    (56) relational_expression -> . expression < expression
    (57) relational_expression -> . expression > expression
    (58) relational_expression -> . expression LESSEQUAL expression
    (59) relational_expression -> . expression MOREEQUAL expression
    (60) relational_expression -> . expression EQUAL expression
    (61) relational_expression -> . expression NOTEQUAL expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (48) array -> . [ ]
    (49) array -> . [ dimensions ]
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    ID              shift and go to state 97
    STRING          shift and go to state 32
    EYE             shift and go to state 31
    ZEROS           shift and go to state 35
    ONES            shift and go to state 34
    -               shift and go to state 28
    [               shift and go to state 36
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    matrix_initialization          shift and go to state 24
    assignment                     shift and go to state 130
    number                         shift and go to state 27
    relational_expression          shift and go to state 29
    array                          shift and go to state 25
    expression                     shift and go to state 39
    assign                         shift and go to state 131

state 92

    (33) assign -> ID MULASSIGN assignment . ;

    ;               shift and go to state 132


state 93

    (31) assign -> ID ADDASSIGN assignment . ;

    ;               shift and go to state 133


state 94

    (41) array_range -> [ INTNUM . , INTNUM ]
    (42) array_range -> [ INTNUM . ]

    ,               shift and go to state 135
    ]               shift and go to state 134


state 95

    (34) assign -> ID DIVASSIGN assignment . ;

    ;               shift and go to state 136


state 96

    (30) assign -> ID = assignment . ;

    ;               shift and go to state 137


state 97

    (29) assign -> ID . = assign
    (30) assign -> ID . = assignment ;
    (31) assign -> ID . ADDASSIGN assignment ;
    (32) assign -> ID . SUBASSIGN assignment ;
    (33) assign -> ID . MULASSIGN assignment ;
    (34) assign -> ID . DIVASSIGN assignment ;
    (71) expression -> ID .
    (72) expression -> ID . TRANSPOSE

    =               shift and go to state 52
    ADDASSIGN       shift and go to state 49
    SUBASSIGN       shift and go to state 46
    MULASSIGN       shift and go to state 48
    DIVASSIGN       shift and go to state 51
    <               reduce using rule 71 (expression -> ID .)
    >               reduce using rule 71 (expression -> ID .)
    LESSEQUAL       reduce using rule 71 (expression -> ID .)
    MOREEQUAL       reduce using rule 71 (expression -> ID .)
    EQUAL           reduce using rule 71 (expression -> ID .)
    NOTEQUAL        reduce using rule 71 (expression -> ID .)
    +               reduce using rule 71 (expression -> ID .)
    -               reduce using rule 71 (expression -> ID .)
    *               reduce using rule 71 (expression -> ID .)
    /               reduce using rule 71 (expression -> ID .)
    DOTADD          reduce using rule 71 (expression -> ID .)
    DOTSUB          reduce using rule 71 (expression -> ID .)
    DOTMUL          reduce using rule 71 (expression -> ID .)
    DOTDIV          reduce using rule 71 (expression -> ID .)
    ;               reduce using rule 71 (expression -> ID .)
    TRANSPOSE       shift and go to state 67


state 98

    (29) assign -> ID = assign .

    }               reduce using rule 29 (assign -> ID = assign .)
    {               reduce using rule 29 (assign -> ID = assign .)
    IF              reduce using rule 29 (assign -> ID = assign .)
    PRINT           reduce using rule 29 (assign -> ID = assign .)
    WHILE           reduce using rule 29 (assign -> ID = assign .)
    FOR             reduce using rule 29 (assign -> ID = assign .)
    BREAK           reduce using rule 29 (assign -> ID = assign .)
    CONTINUE        reduce using rule 29 (assign -> ID = assign .)
    RETURN          reduce using rule 29 (assign -> ID = assign .)
    ID              reduce using rule 29 (assign -> ID = assign .)
    $end            reduce using rule 29 (assign -> ID = assign .)
    ELSE            reduce using rule 29 (assign -> ID = assign .)


state 99

    (17) if -> IF ( assignment . ) instruction
    (18) if -> IF ( assignment . ) instruction ELSE instruction

    )               shift and go to state 138


state 100

    (16) block -> { instructions } .

    {               reduce using rule 16 (block -> { instructions } .)
    IF              reduce using rule 16 (block -> { instructions } .)
    PRINT           reduce using rule 16 (block -> { instructions } .)
    WHILE           reduce using rule 16 (block -> { instructions } .)
    FOR             reduce using rule 16 (block -> { instructions } .)
    BREAK           reduce using rule 16 (block -> { instructions } .)
    CONTINUE        reduce using rule 16 (block -> { instructions } .)
    RETURN          reduce using rule 16 (block -> { instructions } .)
    ID              reduce using rule 16 (block -> { instructions } .)
    $end            reduce using rule 16 (block -> { instructions } .)
    }               reduce using rule 16 (block -> { instructions } .)
    ELSE            reduce using rule 16 (block -> { instructions } .)


state 101

    (74) matrix_initialization -> EYE ( INTNUM . )

    )               shift and go to state 139


state 102

    (76) matrix_initialization -> ONES ( INTNUM . )

    )               shift and go to state 140


state 103

    (75) matrix_initialization -> ZEROS ( INTNUM . )

    )               shift and go to state 141


state 104

    (49) array -> [ dimensions ] .

    ,               reduce using rule 49 (array -> [ dimensions ] .)
    ;               reduce using rule 49 (array -> [ dimensions ] .)
    )               reduce using rule 49 (array -> [ dimensions ] .)


state 105

    (53) values -> value , . values
    (52) values -> . value
    (53) values -> . value , values
    (54) value -> . STRING
    (55) value -> . number
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    STRING          shift and go to state 66
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    values                         shift and go to state 142
    number                         shift and go to state 63
    value                          shift and go to state 62

state 106

    (51) dimensions -> values ; . dimensions
    (50) dimensions -> . values
    (51) dimensions -> . values ; dimensions
    (52) values -> . value
    (53) values -> . value , values
    (54) value -> . STRING
    (55) value -> . number
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    STRING          shift and go to state 66
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    values                         shift and go to state 64
    dimensions                     shift and go to state 143
    value                          shift and go to state 62
    number                         shift and go to state 63

state 107

    (59) relational_expression -> expression MOREEQUAL expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTADD expression
    (67) expression -> expression . DOTSUB expression
    (68) expression -> expression . DOTMUL expression
    (69) expression -> expression . DOTDIV expression

    ;               reduce using rule 59 (relational_expression -> expression MOREEQUAL expression .)
    )               reduce using rule 59 (relational_expression -> expression MOREEQUAL expression .)
    ,               reduce using rule 59 (relational_expression -> expression MOREEQUAL expression .)
    +               shift and go to state 71
    -               shift and go to state 73
    *               shift and go to state 72
    /               shift and go to state 75
    DOTADD          shift and go to state 77
    DOTSUB          shift and go to state 76
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 70


state 108

    (61) relational_expression -> expression NOTEQUAL expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTADD expression
    (67) expression -> expression . DOTSUB expression
    (68) expression -> expression . DOTMUL expression
    (69) expression -> expression . DOTDIV expression

    ;               reduce using rule 61 (relational_expression -> expression NOTEQUAL expression .)
    )               reduce using rule 61 (relational_expression -> expression NOTEQUAL expression .)
    ,               reduce using rule 61 (relational_expression -> expression NOTEQUAL expression .)
    +               shift and go to state 71
    -               shift and go to state 73
    *               shift and go to state 72
    /               shift and go to state 75
    DOTADD          shift and go to state 77
    DOTSUB          shift and go to state 76
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 70


state 109

    (69) expression -> expression DOTDIV expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTADD expression
    (67) expression -> expression . DOTSUB expression
    (68) expression -> expression . DOTMUL expression
    (69) expression -> expression . DOTDIV expression

    +               reduce using rule 69 (expression -> expression DOTDIV expression .)
    -               reduce using rule 69 (expression -> expression DOTDIV expression .)
    *               reduce using rule 69 (expression -> expression DOTDIV expression .)
    /               reduce using rule 69 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 69 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 69 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 69 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 69 (expression -> expression DOTDIV expression .)
    <               reduce using rule 69 (expression -> expression DOTDIV expression .)
    >               reduce using rule 69 (expression -> expression DOTDIV expression .)
    LESSEQUAL       reduce using rule 69 (expression -> expression DOTDIV expression .)
    MOREEQUAL       reduce using rule 69 (expression -> expression DOTDIV expression .)
    EQUAL           reduce using rule 69 (expression -> expression DOTDIV expression .)
    NOTEQUAL        reduce using rule 69 (expression -> expression DOTDIV expression .)
    ;               reduce using rule 69 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 69 (expression -> expression DOTDIV expression .)
    )               reduce using rule 69 (expression -> expression DOTDIV expression .)
    :               reduce using rule 69 (expression -> expression DOTDIV expression .)
    {               reduce using rule 69 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 69 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 69 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 69 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 69 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 69 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 69 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 69 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 69 (expression -> expression DOTDIV expression .)

  ! +               [ shift and go to state 71 ]
  ! -               [ shift and go to state 73 ]
  ! *               [ shift and go to state 72 ]
  ! /               [ shift and go to state 75 ]
  ! DOTADD          [ shift and go to state 77 ]
  ! DOTSUB          [ shift and go to state 76 ]
  ! DOTMUL          [ shift and go to state 79 ]
  ! DOTDIV          [ shift and go to state 70 ]


state 110

    (62) expression -> expression + expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTADD expression
    (67) expression -> expression . DOTSUB expression
    (68) expression -> expression . DOTMUL expression
    (69) expression -> expression . DOTDIV expression

    +               reduce using rule 62 (expression -> expression + expression .)
    -               reduce using rule 62 (expression -> expression + expression .)
    DOTADD          reduce using rule 62 (expression -> expression + expression .)
    DOTSUB          reduce using rule 62 (expression -> expression + expression .)
    <               reduce using rule 62 (expression -> expression + expression .)
    >               reduce using rule 62 (expression -> expression + expression .)
    LESSEQUAL       reduce using rule 62 (expression -> expression + expression .)
    MOREEQUAL       reduce using rule 62 (expression -> expression + expression .)
    EQUAL           reduce using rule 62 (expression -> expression + expression .)
    NOTEQUAL        reduce using rule 62 (expression -> expression + expression .)
    ;               reduce using rule 62 (expression -> expression + expression .)
    ,               reduce using rule 62 (expression -> expression + expression .)
    )               reduce using rule 62 (expression -> expression + expression .)
    :               reduce using rule 62 (expression -> expression + expression .)
    {               reduce using rule 62 (expression -> expression + expression .)
    IF              reduce using rule 62 (expression -> expression + expression .)
    PRINT           reduce using rule 62 (expression -> expression + expression .)
    WHILE           reduce using rule 62 (expression -> expression + expression .)
    FOR             reduce using rule 62 (expression -> expression + expression .)
    BREAK           reduce using rule 62 (expression -> expression + expression .)
    CONTINUE        reduce using rule 62 (expression -> expression + expression .)
    RETURN          reduce using rule 62 (expression -> expression + expression .)
    ID              reduce using rule 62 (expression -> expression + expression .)
    *               shift and go to state 72
    /               shift and go to state 75
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 70

  ! *               [ reduce using rule 62 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 62 (expression -> expression + expression .) ]
  ! DOTMUL          [ reduce using rule 62 (expression -> expression + expression .) ]
  ! DOTDIV          [ reduce using rule 62 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 71 ]
  ! -               [ shift and go to state 73 ]
  ! DOTADD          [ shift and go to state 77 ]
  ! DOTSUB          [ shift and go to state 76 ]


state 111

    (64) expression -> expression * expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTADD expression
    (67) expression -> expression . DOTSUB expression
    (68) expression -> expression . DOTMUL expression
    (69) expression -> expression . DOTDIV expression

    +               reduce using rule 64 (expression -> expression * expression .)
    -               reduce using rule 64 (expression -> expression * expression .)
    *               reduce using rule 64 (expression -> expression * expression .)
    /               reduce using rule 64 (expression -> expression * expression .)
    DOTADD          reduce using rule 64 (expression -> expression * expression .)
    DOTSUB          reduce using rule 64 (expression -> expression * expression .)
    DOTMUL          reduce using rule 64 (expression -> expression * expression .)
    DOTDIV          reduce using rule 64 (expression -> expression * expression .)
    <               reduce using rule 64 (expression -> expression * expression .)
    >               reduce using rule 64 (expression -> expression * expression .)
    LESSEQUAL       reduce using rule 64 (expression -> expression * expression .)
    MOREEQUAL       reduce using rule 64 (expression -> expression * expression .)
    EQUAL           reduce using rule 64 (expression -> expression * expression .)
    NOTEQUAL        reduce using rule 64 (expression -> expression * expression .)
    ;               reduce using rule 64 (expression -> expression * expression .)
    ,               reduce using rule 64 (expression -> expression * expression .)
    )               reduce using rule 64 (expression -> expression * expression .)
    :               reduce using rule 64 (expression -> expression * expression .)
    {               reduce using rule 64 (expression -> expression * expression .)
    IF              reduce using rule 64 (expression -> expression * expression .)
    PRINT           reduce using rule 64 (expression -> expression * expression .)
    WHILE           reduce using rule 64 (expression -> expression * expression .)
    FOR             reduce using rule 64 (expression -> expression * expression .)
    BREAK           reduce using rule 64 (expression -> expression * expression .)
    CONTINUE        reduce using rule 64 (expression -> expression * expression .)
    RETURN          reduce using rule 64 (expression -> expression * expression .)
    ID              reduce using rule 64 (expression -> expression * expression .)

  ! +               [ shift and go to state 71 ]
  ! -               [ shift and go to state 73 ]
  ! *               [ shift and go to state 72 ]
  ! /               [ shift and go to state 75 ]
  ! DOTADD          [ shift and go to state 77 ]
  ! DOTSUB          [ shift and go to state 76 ]
  ! DOTMUL          [ shift and go to state 79 ]
  ! DOTDIV          [ shift and go to state 70 ]


state 112

    (63) expression -> expression - expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTADD expression
    (67) expression -> expression . DOTSUB expression
    (68) expression -> expression . DOTMUL expression
    (69) expression -> expression . DOTDIV expression

    +               reduce using rule 63 (expression -> expression - expression .)
    -               reduce using rule 63 (expression -> expression - expression .)
    DOTADD          reduce using rule 63 (expression -> expression - expression .)
    DOTSUB          reduce using rule 63 (expression -> expression - expression .)
    <               reduce using rule 63 (expression -> expression - expression .)
    >               reduce using rule 63 (expression -> expression - expression .)
    LESSEQUAL       reduce using rule 63 (expression -> expression - expression .)
    MOREEQUAL       reduce using rule 63 (expression -> expression - expression .)
    EQUAL           reduce using rule 63 (expression -> expression - expression .)
    NOTEQUAL        reduce using rule 63 (expression -> expression - expression .)
    ;               reduce using rule 63 (expression -> expression - expression .)
    ,               reduce using rule 63 (expression -> expression - expression .)
    )               reduce using rule 63 (expression -> expression - expression .)
    :               reduce using rule 63 (expression -> expression - expression .)
    {               reduce using rule 63 (expression -> expression - expression .)
    IF              reduce using rule 63 (expression -> expression - expression .)
    PRINT           reduce using rule 63 (expression -> expression - expression .)
    WHILE           reduce using rule 63 (expression -> expression - expression .)
    FOR             reduce using rule 63 (expression -> expression - expression .)
    BREAK           reduce using rule 63 (expression -> expression - expression .)
    CONTINUE        reduce using rule 63 (expression -> expression - expression .)
    RETURN          reduce using rule 63 (expression -> expression - expression .)
    ID              reduce using rule 63 (expression -> expression - expression .)
    *               shift and go to state 72
    /               shift and go to state 75
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 70

  ! *               [ reduce using rule 63 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 63 (expression -> expression - expression .) ]
  ! DOTMUL          [ reduce using rule 63 (expression -> expression - expression .) ]
  ! DOTDIV          [ reduce using rule 63 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 71 ]
  ! -               [ shift and go to state 73 ]
  ! DOTADD          [ shift and go to state 77 ]
  ! DOTSUB          [ shift and go to state 76 ]


state 113

    (60) relational_expression -> expression EQUAL expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTADD expression
    (67) expression -> expression . DOTSUB expression
    (68) expression -> expression . DOTMUL expression
    (69) expression -> expression . DOTDIV expression

    ;               reduce using rule 60 (relational_expression -> expression EQUAL expression .)
    )               reduce using rule 60 (relational_expression -> expression EQUAL expression .)
    ,               reduce using rule 60 (relational_expression -> expression EQUAL expression .)
    +               shift and go to state 71
    -               shift and go to state 73
    *               shift and go to state 72
    /               shift and go to state 75
    DOTADD          shift and go to state 77
    DOTSUB          shift and go to state 76
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 70


state 114

    (65) expression -> expression / expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTADD expression
    (67) expression -> expression . DOTSUB expression
    (68) expression -> expression . DOTMUL expression
    (69) expression -> expression . DOTDIV expression

    +               reduce using rule 65 (expression -> expression / expression .)
    -               reduce using rule 65 (expression -> expression / expression .)
    *               reduce using rule 65 (expression -> expression / expression .)
    /               reduce using rule 65 (expression -> expression / expression .)
    DOTADD          reduce using rule 65 (expression -> expression / expression .)
    DOTSUB          reduce using rule 65 (expression -> expression / expression .)
    DOTMUL          reduce using rule 65 (expression -> expression / expression .)
    DOTDIV          reduce using rule 65 (expression -> expression / expression .)
    <               reduce using rule 65 (expression -> expression / expression .)
    >               reduce using rule 65 (expression -> expression / expression .)
    LESSEQUAL       reduce using rule 65 (expression -> expression / expression .)
    MOREEQUAL       reduce using rule 65 (expression -> expression / expression .)
    EQUAL           reduce using rule 65 (expression -> expression / expression .)
    NOTEQUAL        reduce using rule 65 (expression -> expression / expression .)
    ;               reduce using rule 65 (expression -> expression / expression .)
    ,               reduce using rule 65 (expression -> expression / expression .)
    )               reduce using rule 65 (expression -> expression / expression .)
    :               reduce using rule 65 (expression -> expression / expression .)
    {               reduce using rule 65 (expression -> expression / expression .)
    IF              reduce using rule 65 (expression -> expression / expression .)
    PRINT           reduce using rule 65 (expression -> expression / expression .)
    WHILE           reduce using rule 65 (expression -> expression / expression .)
    FOR             reduce using rule 65 (expression -> expression / expression .)
    BREAK           reduce using rule 65 (expression -> expression / expression .)
    CONTINUE        reduce using rule 65 (expression -> expression / expression .)
    RETURN          reduce using rule 65 (expression -> expression / expression .)
    ID              reduce using rule 65 (expression -> expression / expression .)

  ! +               [ shift and go to state 71 ]
  ! -               [ shift and go to state 73 ]
  ! *               [ shift and go to state 72 ]
  ! /               [ shift and go to state 75 ]
  ! DOTADD          [ shift and go to state 77 ]
  ! DOTSUB          [ shift and go to state 76 ]
  ! DOTMUL          [ shift and go to state 79 ]
  ! DOTDIV          [ shift and go to state 70 ]


state 115

    (67) expression -> expression DOTSUB expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTADD expression
    (67) expression -> expression . DOTSUB expression
    (68) expression -> expression . DOTMUL expression
    (69) expression -> expression . DOTDIV expression

    +               reduce using rule 67 (expression -> expression DOTSUB expression .)
    -               reduce using rule 67 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 67 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 67 (expression -> expression DOTSUB expression .)
    <               reduce using rule 67 (expression -> expression DOTSUB expression .)
    >               reduce using rule 67 (expression -> expression DOTSUB expression .)
    LESSEQUAL       reduce using rule 67 (expression -> expression DOTSUB expression .)
    MOREEQUAL       reduce using rule 67 (expression -> expression DOTSUB expression .)
    EQUAL           reduce using rule 67 (expression -> expression DOTSUB expression .)
    NOTEQUAL        reduce using rule 67 (expression -> expression DOTSUB expression .)
    ;               reduce using rule 67 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 67 (expression -> expression DOTSUB expression .)
    )               reduce using rule 67 (expression -> expression DOTSUB expression .)
    :               reduce using rule 67 (expression -> expression DOTSUB expression .)
    {               reduce using rule 67 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 67 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 67 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 67 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 67 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 67 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 67 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 67 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 67 (expression -> expression DOTSUB expression .)
    *               shift and go to state 72
    /               shift and go to state 75
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 70

  ! *               [ reduce using rule 67 (expression -> expression DOTSUB expression .) ]
  ! /               [ reduce using rule 67 (expression -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 67 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 67 (expression -> expression DOTSUB expression .) ]
  ! +               [ shift and go to state 71 ]
  ! -               [ shift and go to state 73 ]
  ! DOTADD          [ shift and go to state 77 ]
  ! DOTSUB          [ shift and go to state 76 ]


state 116

    (66) expression -> expression DOTADD expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTADD expression
    (67) expression -> expression . DOTSUB expression
    (68) expression -> expression . DOTMUL expression
    (69) expression -> expression . DOTDIV expression

    +               reduce using rule 66 (expression -> expression DOTADD expression .)
    -               reduce using rule 66 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 66 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 66 (expression -> expression DOTADD expression .)
    <               reduce using rule 66 (expression -> expression DOTADD expression .)
    >               reduce using rule 66 (expression -> expression DOTADD expression .)
    LESSEQUAL       reduce using rule 66 (expression -> expression DOTADD expression .)
    MOREEQUAL       reduce using rule 66 (expression -> expression DOTADD expression .)
    EQUAL           reduce using rule 66 (expression -> expression DOTADD expression .)
    NOTEQUAL        reduce using rule 66 (expression -> expression DOTADD expression .)
    ;               reduce using rule 66 (expression -> expression DOTADD expression .)
    ,               reduce using rule 66 (expression -> expression DOTADD expression .)
    )               reduce using rule 66 (expression -> expression DOTADD expression .)
    :               reduce using rule 66 (expression -> expression DOTADD expression .)
    {               reduce using rule 66 (expression -> expression DOTADD expression .)
    IF              reduce using rule 66 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 66 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 66 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 66 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 66 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 66 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 66 (expression -> expression DOTADD expression .)
    ID              reduce using rule 66 (expression -> expression DOTADD expression .)
    *               shift and go to state 72
    /               shift and go to state 75
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 70

  ! *               [ reduce using rule 66 (expression -> expression DOTADD expression .) ]
  ! /               [ reduce using rule 66 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 66 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 66 (expression -> expression DOTADD expression .) ]
  ! +               [ shift and go to state 71 ]
  ! -               [ shift and go to state 73 ]
  ! DOTADD          [ shift and go to state 77 ]
  ! DOTSUB          [ shift and go to state 76 ]


state 117

    (58) relational_expression -> expression LESSEQUAL expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTADD expression
    (67) expression -> expression . DOTSUB expression
    (68) expression -> expression . DOTMUL expression
    (69) expression -> expression . DOTDIV expression

    ;               reduce using rule 58 (relational_expression -> expression LESSEQUAL expression .)
    )               reduce using rule 58 (relational_expression -> expression LESSEQUAL expression .)
    ,               reduce using rule 58 (relational_expression -> expression LESSEQUAL expression .)
    +               shift and go to state 71
    -               shift and go to state 73
    *               shift and go to state 72
    /               shift and go to state 75
    DOTADD          shift and go to state 77
    DOTSUB          shift and go to state 76
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 70


state 118

    (68) expression -> expression DOTMUL expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTADD expression
    (67) expression -> expression . DOTSUB expression
    (68) expression -> expression . DOTMUL expression
    (69) expression -> expression . DOTDIV expression

    +               reduce using rule 68 (expression -> expression DOTMUL expression .)
    -               reduce using rule 68 (expression -> expression DOTMUL expression .)
    *               reduce using rule 68 (expression -> expression DOTMUL expression .)
    /               reduce using rule 68 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 68 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 68 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 68 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 68 (expression -> expression DOTMUL expression .)
    <               reduce using rule 68 (expression -> expression DOTMUL expression .)
    >               reduce using rule 68 (expression -> expression DOTMUL expression .)
    LESSEQUAL       reduce using rule 68 (expression -> expression DOTMUL expression .)
    MOREEQUAL       reduce using rule 68 (expression -> expression DOTMUL expression .)
    EQUAL           reduce using rule 68 (expression -> expression DOTMUL expression .)
    NOTEQUAL        reduce using rule 68 (expression -> expression DOTMUL expression .)
    ;               reduce using rule 68 (expression -> expression DOTMUL expression .)
    ,               reduce using rule 68 (expression -> expression DOTMUL expression .)
    )               reduce using rule 68 (expression -> expression DOTMUL expression .)
    :               reduce using rule 68 (expression -> expression DOTMUL expression .)
    {               reduce using rule 68 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 68 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 68 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 68 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 68 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 68 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 68 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 68 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 68 (expression -> expression DOTMUL expression .)

  ! +               [ shift and go to state 71 ]
  ! -               [ shift and go to state 73 ]
  ! *               [ shift and go to state 72 ]
  ! /               [ shift and go to state 75 ]
  ! DOTADD          [ shift and go to state 77 ]
  ! DOTSUB          [ shift and go to state 76 ]
  ! DOTMUL          [ shift and go to state 79 ]
  ! DOTDIV          [ shift and go to state 70 ]


state 119

    (56) relational_expression -> expression < expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTADD expression
    (67) expression -> expression . DOTSUB expression
    (68) expression -> expression . DOTMUL expression
    (69) expression -> expression . DOTDIV expression

    ;               reduce using rule 56 (relational_expression -> expression < expression .)
    )               reduce using rule 56 (relational_expression -> expression < expression .)
    ,               reduce using rule 56 (relational_expression -> expression < expression .)
    +               shift and go to state 71
    -               shift and go to state 73
    *               shift and go to state 72
    /               shift and go to state 75
    DOTADD          shift and go to state 77
    DOTSUB          shift and go to state 76
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 70


state 120

    (57) relational_expression -> expression > expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTADD expression
    (67) expression -> expression . DOTSUB expression
    (68) expression -> expression . DOTMUL expression
    (69) expression -> expression . DOTDIV expression

    ;               reduce using rule 57 (relational_expression -> expression > expression .)
    )               reduce using rule 57 (relational_expression -> expression > expression .)
    ,               reduce using rule 57 (relational_expression -> expression > expression .)
    +               shift and go to state 71
    -               shift and go to state 73
    *               shift and go to state 72
    /               shift and go to state 75
    DOTADD          shift and go to state 77
    DOTSUB          shift and go to state 76
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 70


state 121

    (22) while -> WHILE ( assignment ) . instruction
    (6) instruction -> . block
    (7) instruction -> . if
    (8) instruction -> . print
    (9) instruction -> . while
    (10) instruction -> . for
    (11) instruction -> . break
    (12) instruction -> . continue
    (13) instruction -> . return
    (14) instruction -> . assign
    (15) instruction -> . assign_in_array
    (16) block -> . { instructions }
    (17) if -> . IF ( assignment ) instruction
    (18) if -> . IF ( assignment ) instruction ELSE instruction
    (19) print -> . PRINT arguments ;
    (22) while -> . WHILE ( assignment ) instruction
    (23) for -> . FOR ID = range instruction
    (25) break -> . BREAK ;
    (26) continue -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN assignment ;
    (29) assign -> . ID = assign
    (30) assign -> . ID = assignment ;
    (31) assign -> . ID ADDASSIGN assignment ;
    (32) assign -> . ID SUBASSIGN assignment ;
    (33) assign -> . ID MULASSIGN assignment ;
    (34) assign -> . ID DIVASSIGN assignment ;
    (35) assign_in_array -> . ID array_range = assign
    (36) assign_in_array -> . ID array_range = assignment ;
    (37) assign_in_array -> . ID array_range ADDASSIGN assignment ;
    (38) assign_in_array -> . ID array_range SUBASSIGN assignment ;
    (39) assign_in_array -> . ID array_range MULASSIGN assignment ;
    (40) assign_in_array -> . ID array_range DIVASSIGN assignment ;

    {               shift and go to state 21
    IF              shift and go to state 16
    PRINT           shift and go to state 5
    WHILE           shift and go to state 3
    FOR             shift and go to state 12
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 4
    RETURN          shift and go to state 2
    ID              shift and go to state 15

    assign_in_array                shift and go to state 1
    return                         shift and go to state 11
    for                            shift and go to state 7
    instruction                    shift and go to state 144
    break                          shift and go to state 13
    while                          shift and go to state 19
    continue                       shift and go to state 20
    print                          shift and go to state 9
    assign                         shift and go to state 22
    block                          shift and go to state 23
    if                             shift and go to state 6

state 122

    (21) arguments -> assignment , arguments .

    ;               reduce using rule 21 (arguments -> assignment , arguments .)


state 123

    (23) for -> FOR ID = range . instruction
    (6) instruction -> . block
    (7) instruction -> . if
    (8) instruction -> . print
    (9) instruction -> . while
    (10) instruction -> . for
    (11) instruction -> . break
    (12) instruction -> . continue
    (13) instruction -> . return
    (14) instruction -> . assign
    (15) instruction -> . assign_in_array
    (16) block -> . { instructions }
    (17) if -> . IF ( assignment ) instruction
    (18) if -> . IF ( assignment ) instruction ELSE instruction
    (19) print -> . PRINT arguments ;
    (22) while -> . WHILE ( assignment ) instruction
    (23) for -> . FOR ID = range instruction
    (25) break -> . BREAK ;
    (26) continue -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN assignment ;
    (29) assign -> . ID = assign
    (30) assign -> . ID = assignment ;
    (31) assign -> . ID ADDASSIGN assignment ;
    (32) assign -> . ID SUBASSIGN assignment ;
    (33) assign -> . ID MULASSIGN assignment ;
    (34) assign -> . ID DIVASSIGN assignment ;
    (35) assign_in_array -> . ID array_range = assign
    (36) assign_in_array -> . ID array_range = assignment ;
    (37) assign_in_array -> . ID array_range ADDASSIGN assignment ;
    (38) assign_in_array -> . ID array_range SUBASSIGN assignment ;
    (39) assign_in_array -> . ID array_range MULASSIGN assignment ;
    (40) assign_in_array -> . ID array_range DIVASSIGN assignment ;

    {               shift and go to state 21
    IF              shift and go to state 16
    PRINT           shift and go to state 5
    WHILE           shift and go to state 3
    FOR             shift and go to state 12
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 4
    RETURN          shift and go to state 2
    ID              shift and go to state 15

    assign_in_array                shift and go to state 1
    return                         shift and go to state 11
    for                            shift and go to state 7
    instruction                    shift and go to state 145
    while                          shift and go to state 19
    break                          shift and go to state 13
    continue                       shift and go to state 20
    print                          shift and go to state 9
    assign                         shift and go to state 22
    block                          shift and go to state 23
    if                             shift and go to state 6

state 124

    (24) range -> expression . : expression
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTADD expression
    (67) expression -> expression . DOTSUB expression
    (68) expression -> expression . DOTMUL expression
    (69) expression -> expression . DOTDIV expression

    :               shift and go to state 146
    +               shift and go to state 71
    -               shift and go to state 73
    *               shift and go to state 72
    /               shift and go to state 75
    DOTADD          shift and go to state 77
    DOTSUB          shift and go to state 76
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 70


state 125

    (32) assign -> ID SUBASSIGN assignment ; .

    }               reduce using rule 32 (assign -> ID SUBASSIGN assignment ; .)
    {               reduce using rule 32 (assign -> ID SUBASSIGN assignment ; .)
    IF              reduce using rule 32 (assign -> ID SUBASSIGN assignment ; .)
    PRINT           reduce using rule 32 (assign -> ID SUBASSIGN assignment ; .)
    WHILE           reduce using rule 32 (assign -> ID SUBASSIGN assignment ; .)
    FOR             reduce using rule 32 (assign -> ID SUBASSIGN assignment ; .)
    BREAK           reduce using rule 32 (assign -> ID SUBASSIGN assignment ; .)
    CONTINUE        reduce using rule 32 (assign -> ID SUBASSIGN assignment ; .)
    RETURN          reduce using rule 32 (assign -> ID SUBASSIGN assignment ; .)
    ID              reduce using rule 32 (assign -> ID SUBASSIGN assignment ; .)
    $end            reduce using rule 32 (assign -> ID SUBASSIGN assignment ; .)
    ELSE            reduce using rule 32 (assign -> ID SUBASSIGN assignment ; .)


state 126

    (38) assign_in_array -> ID array_range SUBASSIGN assignment . ;

    ;               shift and go to state 147


state 127

    (39) assign_in_array -> ID array_range MULASSIGN assignment . ;

    ;               shift and go to state 148


state 128

    (37) assign_in_array -> ID array_range ADDASSIGN assignment . ;

    ;               shift and go to state 149


state 129

    (40) assign_in_array -> ID array_range DIVASSIGN assignment . ;

    ;               shift and go to state 150


state 130

    (36) assign_in_array -> ID array_range = assignment . ;

    ;               shift and go to state 151


state 131

    (35) assign_in_array -> ID array_range = assign .

    {               reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    IF              reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    PRINT           reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    WHILE           reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    FOR             reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    BREAK           reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    CONTINUE        reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    RETURN          reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    ID              reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    $end            reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    }               reduce using rule 35 (assign_in_array -> ID array_range = assign .)
    ELSE            reduce using rule 35 (assign_in_array -> ID array_range = assign .)


state 132

    (33) assign -> ID MULASSIGN assignment ; .

    }               reduce using rule 33 (assign -> ID MULASSIGN assignment ; .)
    {               reduce using rule 33 (assign -> ID MULASSIGN assignment ; .)
    IF              reduce using rule 33 (assign -> ID MULASSIGN assignment ; .)
    PRINT           reduce using rule 33 (assign -> ID MULASSIGN assignment ; .)
    WHILE           reduce using rule 33 (assign -> ID MULASSIGN assignment ; .)
    FOR             reduce using rule 33 (assign -> ID MULASSIGN assignment ; .)
    BREAK           reduce using rule 33 (assign -> ID MULASSIGN assignment ; .)
    CONTINUE        reduce using rule 33 (assign -> ID MULASSIGN assignment ; .)
    RETURN          reduce using rule 33 (assign -> ID MULASSIGN assignment ; .)
    ID              reduce using rule 33 (assign -> ID MULASSIGN assignment ; .)
    $end            reduce using rule 33 (assign -> ID MULASSIGN assignment ; .)
    ELSE            reduce using rule 33 (assign -> ID MULASSIGN assignment ; .)


state 133

    (31) assign -> ID ADDASSIGN assignment ; .

    }               reduce using rule 31 (assign -> ID ADDASSIGN assignment ; .)
    {               reduce using rule 31 (assign -> ID ADDASSIGN assignment ; .)
    IF              reduce using rule 31 (assign -> ID ADDASSIGN assignment ; .)
    PRINT           reduce using rule 31 (assign -> ID ADDASSIGN assignment ; .)
    WHILE           reduce using rule 31 (assign -> ID ADDASSIGN assignment ; .)
    FOR             reduce using rule 31 (assign -> ID ADDASSIGN assignment ; .)
    BREAK           reduce using rule 31 (assign -> ID ADDASSIGN assignment ; .)
    CONTINUE        reduce using rule 31 (assign -> ID ADDASSIGN assignment ; .)
    RETURN          reduce using rule 31 (assign -> ID ADDASSIGN assignment ; .)
    ID              reduce using rule 31 (assign -> ID ADDASSIGN assignment ; .)
    $end            reduce using rule 31 (assign -> ID ADDASSIGN assignment ; .)
    ELSE            reduce using rule 31 (assign -> ID ADDASSIGN assignment ; .)


state 134

    (42) array_range -> [ INTNUM ] .

    =               reduce using rule 42 (array_range -> [ INTNUM ] .)
    ADDASSIGN       reduce using rule 42 (array_range -> [ INTNUM ] .)
    SUBASSIGN       reduce using rule 42 (array_range -> [ INTNUM ] .)
    MULASSIGN       reduce using rule 42 (array_range -> [ INTNUM ] .)
    DIVASSIGN       reduce using rule 42 (array_range -> [ INTNUM ] .)


state 135

    (41) array_range -> [ INTNUM , . INTNUM ]

    INTNUM          shift and go to state 152


state 136

    (34) assign -> ID DIVASSIGN assignment ; .

    }               reduce using rule 34 (assign -> ID DIVASSIGN assignment ; .)
    {               reduce using rule 34 (assign -> ID DIVASSIGN assignment ; .)
    IF              reduce using rule 34 (assign -> ID DIVASSIGN assignment ; .)
    PRINT           reduce using rule 34 (assign -> ID DIVASSIGN assignment ; .)
    WHILE           reduce using rule 34 (assign -> ID DIVASSIGN assignment ; .)
    FOR             reduce using rule 34 (assign -> ID DIVASSIGN assignment ; .)
    BREAK           reduce using rule 34 (assign -> ID DIVASSIGN assignment ; .)
    CONTINUE        reduce using rule 34 (assign -> ID DIVASSIGN assignment ; .)
    RETURN          reduce using rule 34 (assign -> ID DIVASSIGN assignment ; .)
    ID              reduce using rule 34 (assign -> ID DIVASSIGN assignment ; .)
    $end            reduce using rule 34 (assign -> ID DIVASSIGN assignment ; .)
    ELSE            reduce using rule 34 (assign -> ID DIVASSIGN assignment ; .)


state 137

    (30) assign -> ID = assignment ; .

    }               reduce using rule 30 (assign -> ID = assignment ; .)
    {               reduce using rule 30 (assign -> ID = assignment ; .)
    IF              reduce using rule 30 (assign -> ID = assignment ; .)
    PRINT           reduce using rule 30 (assign -> ID = assignment ; .)
    WHILE           reduce using rule 30 (assign -> ID = assignment ; .)
    FOR             reduce using rule 30 (assign -> ID = assignment ; .)
    BREAK           reduce using rule 30 (assign -> ID = assignment ; .)
    CONTINUE        reduce using rule 30 (assign -> ID = assignment ; .)
    RETURN          reduce using rule 30 (assign -> ID = assignment ; .)
    ID              reduce using rule 30 (assign -> ID = assignment ; .)
    $end            reduce using rule 30 (assign -> ID = assignment ; .)
    ELSE            reduce using rule 30 (assign -> ID = assignment ; .)


state 138

    (17) if -> IF ( assignment ) . instruction
    (18) if -> IF ( assignment ) . instruction ELSE instruction
    (6) instruction -> . block
    (7) instruction -> . if
    (8) instruction -> . print
    (9) instruction -> . while
    (10) instruction -> . for
    (11) instruction -> . break
    (12) instruction -> . continue
    (13) instruction -> . return
    (14) instruction -> . assign
    (15) instruction -> . assign_in_array
    (16) block -> . { instructions }
    (17) if -> . IF ( assignment ) instruction
    (18) if -> . IF ( assignment ) instruction ELSE instruction
    (19) print -> . PRINT arguments ;
    (22) while -> . WHILE ( assignment ) instruction
    (23) for -> . FOR ID = range instruction
    (25) break -> . BREAK ;
    (26) continue -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN assignment ;
    (29) assign -> . ID = assign
    (30) assign -> . ID = assignment ;
    (31) assign -> . ID ADDASSIGN assignment ;
    (32) assign -> . ID SUBASSIGN assignment ;
    (33) assign -> . ID MULASSIGN assignment ;
    (34) assign -> . ID DIVASSIGN assignment ;
    (35) assign_in_array -> . ID array_range = assign
    (36) assign_in_array -> . ID array_range = assignment ;
    (37) assign_in_array -> . ID array_range ADDASSIGN assignment ;
    (38) assign_in_array -> . ID array_range SUBASSIGN assignment ;
    (39) assign_in_array -> . ID array_range MULASSIGN assignment ;
    (40) assign_in_array -> . ID array_range DIVASSIGN assignment ;

    {               shift and go to state 21
    IF              shift and go to state 16
    PRINT           shift and go to state 5
    WHILE           shift and go to state 3
    FOR             shift and go to state 12
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 4
    RETURN          shift and go to state 2
    ID              shift and go to state 15

    assign_in_array                shift and go to state 1
    return                         shift and go to state 11
    for                            shift and go to state 7
    instruction                    shift and go to state 153
    break                          shift and go to state 13
    while                          shift and go to state 19
    continue                       shift and go to state 20
    print                          shift and go to state 9
    assign                         shift and go to state 22
    block                          shift and go to state 23
    if                             shift and go to state 6

state 139

    (74) matrix_initialization -> EYE ( INTNUM ) .

    ;               reduce using rule 74 (matrix_initialization -> EYE ( INTNUM ) .)
    ,               reduce using rule 74 (matrix_initialization -> EYE ( INTNUM ) .)
    )               reduce using rule 74 (matrix_initialization -> EYE ( INTNUM ) .)


state 140

    (76) matrix_initialization -> ONES ( INTNUM ) .

    ;               reduce using rule 76 (matrix_initialization -> ONES ( INTNUM ) .)
    ,               reduce using rule 76 (matrix_initialization -> ONES ( INTNUM ) .)
    )               reduce using rule 76 (matrix_initialization -> ONES ( INTNUM ) .)


state 141

    (75) matrix_initialization -> ZEROS ( INTNUM ) .

    ;               reduce using rule 75 (matrix_initialization -> ZEROS ( INTNUM ) .)
    ,               reduce using rule 75 (matrix_initialization -> ZEROS ( INTNUM ) .)
    )               reduce using rule 75 (matrix_initialization -> ZEROS ( INTNUM ) .)


state 142

    (53) values -> value , values .

    ;               reduce using rule 53 (values -> value , values .)
    ]               reduce using rule 53 (values -> value , values .)


state 143

    (51) dimensions -> values ; dimensions .

    ]               reduce using rule 51 (dimensions -> values ; dimensions .)


state 144

    (22) while -> WHILE ( assignment ) instruction .

    {               reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    IF              reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    PRINT           reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    WHILE           reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    FOR             reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    BREAK           reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    CONTINUE        reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    RETURN          reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    ID              reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    $end            reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    }               reduce using rule 22 (while -> WHILE ( assignment ) instruction .)
    ELSE            reduce using rule 22 (while -> WHILE ( assignment ) instruction .)


state 145

    (23) for -> FOR ID = range instruction .

    {               reduce using rule 23 (for -> FOR ID = range instruction .)
    IF              reduce using rule 23 (for -> FOR ID = range instruction .)
    PRINT           reduce using rule 23 (for -> FOR ID = range instruction .)
    WHILE           reduce using rule 23 (for -> FOR ID = range instruction .)
    FOR             reduce using rule 23 (for -> FOR ID = range instruction .)
    BREAK           reduce using rule 23 (for -> FOR ID = range instruction .)
    CONTINUE        reduce using rule 23 (for -> FOR ID = range instruction .)
    RETURN          reduce using rule 23 (for -> FOR ID = range instruction .)
    ID              reduce using rule 23 (for -> FOR ID = range instruction .)
    $end            reduce using rule 23 (for -> FOR ID = range instruction .)
    }               reduce using rule 23 (for -> FOR ID = range instruction .)
    ELSE            reduce using rule 23 (for -> FOR ID = range instruction .)


state 146

    (24) range -> expression : . expression
    (62) expression -> . expression + expression
    (63) expression -> . expression - expression
    (64) expression -> . expression * expression
    (65) expression -> . expression / expression
    (66) expression -> . expression DOTADD expression
    (67) expression -> . expression DOTSUB expression
    (68) expression -> . expression DOTMUL expression
    (69) expression -> . expression DOTDIV expression
    (70) expression -> . number
    (71) expression -> . ID
    (72) expression -> . ID TRANSPOSE
    (73) expression -> . - expression
    (77) number -> . INTNUM
    (78) number -> . FLOAT

    ID              shift and go to state 37
    -               shift and go to state 28
    INTNUM          shift and go to state 26
    FLOAT           shift and go to state 38

    expression                     shift and go to state 154
    number                         shift and go to state 27

state 147

    (38) assign_in_array -> ID array_range SUBASSIGN assignment ; .

    {               reduce using rule 38 (assign_in_array -> ID array_range SUBASSIGN assignment ; .)
    IF              reduce using rule 38 (assign_in_array -> ID array_range SUBASSIGN assignment ; .)
    PRINT           reduce using rule 38 (assign_in_array -> ID array_range SUBASSIGN assignment ; .)
    WHILE           reduce using rule 38 (assign_in_array -> ID array_range SUBASSIGN assignment ; .)
    FOR             reduce using rule 38 (assign_in_array -> ID array_range SUBASSIGN assignment ; .)
    BREAK           reduce using rule 38 (assign_in_array -> ID array_range SUBASSIGN assignment ; .)
    CONTINUE        reduce using rule 38 (assign_in_array -> ID array_range SUBASSIGN assignment ; .)
    RETURN          reduce using rule 38 (assign_in_array -> ID array_range SUBASSIGN assignment ; .)
    ID              reduce using rule 38 (assign_in_array -> ID array_range SUBASSIGN assignment ; .)
    $end            reduce using rule 38 (assign_in_array -> ID array_range SUBASSIGN assignment ; .)
    }               reduce using rule 38 (assign_in_array -> ID array_range SUBASSIGN assignment ; .)
    ELSE            reduce using rule 38 (assign_in_array -> ID array_range SUBASSIGN assignment ; .)


state 148

    (39) assign_in_array -> ID array_range MULASSIGN assignment ; .

    {               reduce using rule 39 (assign_in_array -> ID array_range MULASSIGN assignment ; .)
    IF              reduce using rule 39 (assign_in_array -> ID array_range MULASSIGN assignment ; .)
    PRINT           reduce using rule 39 (assign_in_array -> ID array_range MULASSIGN assignment ; .)
    WHILE           reduce using rule 39 (assign_in_array -> ID array_range MULASSIGN assignment ; .)
    FOR             reduce using rule 39 (assign_in_array -> ID array_range MULASSIGN assignment ; .)
    BREAK           reduce using rule 39 (assign_in_array -> ID array_range MULASSIGN assignment ; .)
    CONTINUE        reduce using rule 39 (assign_in_array -> ID array_range MULASSIGN assignment ; .)
    RETURN          reduce using rule 39 (assign_in_array -> ID array_range MULASSIGN assignment ; .)
    ID              reduce using rule 39 (assign_in_array -> ID array_range MULASSIGN assignment ; .)
    $end            reduce using rule 39 (assign_in_array -> ID array_range MULASSIGN assignment ; .)
    }               reduce using rule 39 (assign_in_array -> ID array_range MULASSIGN assignment ; .)
    ELSE            reduce using rule 39 (assign_in_array -> ID array_range MULASSIGN assignment ; .)


state 149

    (37) assign_in_array -> ID array_range ADDASSIGN assignment ; .

    {               reduce using rule 37 (assign_in_array -> ID array_range ADDASSIGN assignment ; .)
    IF              reduce using rule 37 (assign_in_array -> ID array_range ADDASSIGN assignment ; .)
    PRINT           reduce using rule 37 (assign_in_array -> ID array_range ADDASSIGN assignment ; .)
    WHILE           reduce using rule 37 (assign_in_array -> ID array_range ADDASSIGN assignment ; .)
    FOR             reduce using rule 37 (assign_in_array -> ID array_range ADDASSIGN assignment ; .)
    BREAK           reduce using rule 37 (assign_in_array -> ID array_range ADDASSIGN assignment ; .)
    CONTINUE        reduce using rule 37 (assign_in_array -> ID array_range ADDASSIGN assignment ; .)
    RETURN          reduce using rule 37 (assign_in_array -> ID array_range ADDASSIGN assignment ; .)
    ID              reduce using rule 37 (assign_in_array -> ID array_range ADDASSIGN assignment ; .)
    $end            reduce using rule 37 (assign_in_array -> ID array_range ADDASSIGN assignment ; .)
    }               reduce using rule 37 (assign_in_array -> ID array_range ADDASSIGN assignment ; .)
    ELSE            reduce using rule 37 (assign_in_array -> ID array_range ADDASSIGN assignment ; .)


state 150

    (40) assign_in_array -> ID array_range DIVASSIGN assignment ; .

    {               reduce using rule 40 (assign_in_array -> ID array_range DIVASSIGN assignment ; .)
    IF              reduce using rule 40 (assign_in_array -> ID array_range DIVASSIGN assignment ; .)
    PRINT           reduce using rule 40 (assign_in_array -> ID array_range DIVASSIGN assignment ; .)
    WHILE           reduce using rule 40 (assign_in_array -> ID array_range DIVASSIGN assignment ; .)
    FOR             reduce using rule 40 (assign_in_array -> ID array_range DIVASSIGN assignment ; .)
    BREAK           reduce using rule 40 (assign_in_array -> ID array_range DIVASSIGN assignment ; .)
    CONTINUE        reduce using rule 40 (assign_in_array -> ID array_range DIVASSIGN assignment ; .)
    RETURN          reduce using rule 40 (assign_in_array -> ID array_range DIVASSIGN assignment ; .)
    ID              reduce using rule 40 (assign_in_array -> ID array_range DIVASSIGN assignment ; .)
    $end            reduce using rule 40 (assign_in_array -> ID array_range DIVASSIGN assignment ; .)
    }               reduce using rule 40 (assign_in_array -> ID array_range DIVASSIGN assignment ; .)
    ELSE            reduce using rule 40 (assign_in_array -> ID array_range DIVASSIGN assignment ; .)


state 151

    (36) assign_in_array -> ID array_range = assignment ; .

    {               reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    IF              reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    PRINT           reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    WHILE           reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    FOR             reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    BREAK           reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    CONTINUE        reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    RETURN          reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    ID              reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    $end            reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    }               reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)
    ELSE            reduce using rule 36 (assign_in_array -> ID array_range = assignment ; .)


state 152

    (41) array_range -> [ INTNUM , INTNUM . ]

    ]               shift and go to state 155


state 153

    (17) if -> IF ( assignment ) instruction .
    (18) if -> IF ( assignment ) instruction . ELSE instruction

    {               reduce using rule 17 (if -> IF ( assignment ) instruction .)
    IF              reduce using rule 17 (if -> IF ( assignment ) instruction .)
    PRINT           reduce using rule 17 (if -> IF ( assignment ) instruction .)
    WHILE           reduce using rule 17 (if -> IF ( assignment ) instruction .)
    FOR             reduce using rule 17 (if -> IF ( assignment ) instruction .)
    BREAK           reduce using rule 17 (if -> IF ( assignment ) instruction .)
    CONTINUE        reduce using rule 17 (if -> IF ( assignment ) instruction .)
    RETURN          reduce using rule 17 (if -> IF ( assignment ) instruction .)
    ID              reduce using rule 17 (if -> IF ( assignment ) instruction .)
    $end            reduce using rule 17 (if -> IF ( assignment ) instruction .)
    }               reduce using rule 17 (if -> IF ( assignment ) instruction .)
    ELSE            shift and go to state 156

  ! ELSE            [ reduce using rule 17 (if -> IF ( assignment ) instruction .) ]


state 154

    (24) range -> expression : expression .
    (62) expression -> expression . + expression
    (63) expression -> expression . - expression
    (64) expression -> expression . * expression
    (65) expression -> expression . / expression
    (66) expression -> expression . DOTADD expression
    (67) expression -> expression . DOTSUB expression
    (68) expression -> expression . DOTMUL expression
    (69) expression -> expression . DOTDIV expression

    {               reduce using rule 24 (range -> expression : expression .)
    IF              reduce using rule 24 (range -> expression : expression .)
    PRINT           reduce using rule 24 (range -> expression : expression .)
    WHILE           reduce using rule 24 (range -> expression : expression .)
    FOR             reduce using rule 24 (range -> expression : expression .)
    BREAK           reduce using rule 24 (range -> expression : expression .)
    CONTINUE        reduce using rule 24 (range -> expression : expression .)
    RETURN          reduce using rule 24 (range -> expression : expression .)
    ID              reduce using rule 24 (range -> expression : expression .)
    +               shift and go to state 71
    -               shift and go to state 73
    *               shift and go to state 72
    /               shift and go to state 75
    DOTADD          shift and go to state 77
    DOTSUB          shift and go to state 76
    DOTMUL          shift and go to state 79
    DOTDIV          shift and go to state 70


state 155

    (41) array_range -> [ INTNUM , INTNUM ] .

    =               reduce using rule 41 (array_range -> [ INTNUM , INTNUM ] .)
    ADDASSIGN       reduce using rule 41 (array_range -> [ INTNUM , INTNUM ] .)
    SUBASSIGN       reduce using rule 41 (array_range -> [ INTNUM , INTNUM ] .)
    MULASSIGN       reduce using rule 41 (array_range -> [ INTNUM , INTNUM ] .)
    DIVASSIGN       reduce using rule 41 (array_range -> [ INTNUM , INTNUM ] .)


state 156

    (18) if -> IF ( assignment ) instruction ELSE . instruction
    (6) instruction -> . block
    (7) instruction -> . if
    (8) instruction -> . print
    (9) instruction -> . while
    (10) instruction -> . for
    (11) instruction -> . break
    (12) instruction -> . continue
    (13) instruction -> . return
    (14) instruction -> . assign
    (15) instruction -> . assign_in_array
    (16) block -> . { instructions }
    (17) if -> . IF ( assignment ) instruction
    (18) if -> . IF ( assignment ) instruction ELSE instruction
    (19) print -> . PRINT arguments ;
    (22) while -> . WHILE ( assignment ) instruction
    (23) for -> . FOR ID = range instruction
    (25) break -> . BREAK ;
    (26) continue -> . CONTINUE ;
    (27) return -> . RETURN ;
    (28) return -> . RETURN assignment ;
    (29) assign -> . ID = assign
    (30) assign -> . ID = assignment ;
    (31) assign -> . ID ADDASSIGN assignment ;
    (32) assign -> . ID SUBASSIGN assignment ;
    (33) assign -> . ID MULASSIGN assignment ;
    (34) assign -> . ID DIVASSIGN assignment ;
    (35) assign_in_array -> . ID array_range = assign
    (36) assign_in_array -> . ID array_range = assignment ;
    (37) assign_in_array -> . ID array_range ADDASSIGN assignment ;
    (38) assign_in_array -> . ID array_range SUBASSIGN assignment ;
    (39) assign_in_array -> . ID array_range MULASSIGN assignment ;
    (40) assign_in_array -> . ID array_range DIVASSIGN assignment ;

    {               shift and go to state 21
    IF              shift and go to state 16
    PRINT           shift and go to state 5
    WHILE           shift and go to state 3
    FOR             shift and go to state 12
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 4
    RETURN          shift and go to state 2
    ID              shift and go to state 15

    assign_in_array                shift and go to state 1
    return                         shift and go to state 11
    for                            shift and go to state 7
    instruction                    shift and go to state 157
    break                          shift and go to state 13
    while                          shift and go to state 19
    continue                       shift and go to state 20
    print                          shift and go to state 9
    assign                         shift and go to state 22
    block                          shift and go to state 23
    if                             shift and go to state 6

state 157

    (18) if -> IF ( assignment ) instruction ELSE instruction .

    {               reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    IF              reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    PRINT           reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    WHILE           reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    FOR             reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    BREAK           reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    CONTINUE        reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    RETURN          reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    ID              reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    $end            reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    }               reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)
    ELSE            reduce using rule 18 (if -> IF ( assignment ) instruction ELSE instruction .)

