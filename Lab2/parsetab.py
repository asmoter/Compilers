
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "nonassocIFXnonassocELSEnonassoc=ADDASSIGNSUBASSIGNMULASSIGNDIVASSIGNnonassocEQUALNOTEQUALnonassoc<>LESSEQUALMOREEQUALleft+-DOTADDDOTSUBleft*/DOTMULDOTDIVrightUNEGATIONleftTRANSPOSEADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQUAL EYE FLOAT FOR ID IF INTNUM LESSEQUAL MOREEQUAL MULASSIGN NOTEQUAL ONES PRINT RETURN STRING SUBASSIGN TRANSPOSE WHILE ZEROSprogram : instructions_optinstructions_opt : instructions instructions_opt : instructions : instructions instruction instructions : instruction instruction : block\n                   | if\n                   | print\n                   | while\n                   | for\n                   | break\n                   | continue\n                   | return\n                   | assign\n                   | assign_in_array  block : '{' instructions '}'  if : IF '(' assignment ')' instruction %prec IFX\n           | IF '(' assignment ')' instruction ELSE instruction  print : PRINT arguments ';'  arguments : assignment\n                  | assignment ',' arguments  while : WHILE '(' assignment ')' instruction  for : FOR ID '=' range instruction  range : expression ':' expression  break : BREAK ';'  continue : CONTINUE ';'  return : RETURN ';'\n               | RETURN assignment ';'  assign : ID '=' assign\n               | ID '=' assignment ';'\n               | ID ADDASSIGN assignment ';'\n               | ID SUBASSIGN assignment ';'\n               | ID MULASSIGN assignment ';'\n               | ID DIVASSIGN assignment ';'  assign_in_array : ID array_range '=' assign\n                        | ID array_range '=' assignment ';'\n                        | ID array_range ADDASSIGN assignment ';'\n                        | ID array_range SUBASSIGN assignment ';'\n                        | ID array_range MULASSIGN assignment ';'\n                        | ID array_range DIVASSIGN assignment ';'  array_range : '[' INTNUM ',' INTNUM ']'\n                    | '[' INTNUM ']'  assignment : STRING\n                   | matrix_initialization\n                   | relational_expression\n                   | expression\n                   | array  array : '[' ']'\n              | '[' dimensions ']'  dimensions : values\n                   | values ';' dimensions  values : value\n               | value ',' values  value : STRING\n              | number  relational_expression : expression '<' expression\n                              | expression '>' expression\n                              | expression LESSEQUAL expression\n                              | expression MOREEQUAL expression\n                              | expression EQUAL expression\n                              | expression NOTEQUAL expression  expression : expression '+' expression\n                   | expression '-' expression\n                   | expression '*' expression\n                   | expression '/' expression\n                   | expression DOTADD expression\n                   | expression DOTSUB expression\n                   | expression DOTMUL expression\n                   | expression DOTDIV expression  expression : number\n                   | ID  expression : ID TRANSPOSE  expression : '-' expression %prec UNEGATION  matrix_initialization : EYE '(' INTNUM ')'\n                                | ZEROS '(' INTNUM ')'\n                                | ONES '(' INTNUM ')'  number : INTNUM\n               | FLOAT "
    
_lr_action_items = {'SUBASSIGN':([15,47,97,134,155,],[46,87,46,-42,-41,]),'DOTDIV':([26,27,37,38,39,56,67,97,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,154,],[-77,-70,-71,-78,70,-73,-72,-71,70,70,-69,70,-64,70,70,-65,70,70,70,-68,70,70,70,70,]),'RETURN':([0,1,6,7,9,10,11,13,17,19,20,21,22,23,26,27,30,37,38,41,44,54,55,56,58,67,83,98,100,109,110,111,112,114,115,116,118,121,123,125,131,132,133,136,137,138,144,145,147,148,149,150,151,153,154,156,157,],[2,-15,-7,-10,-8,2,-13,-11,-5,-9,-12,2,-14,-6,-77,-70,-27,-71,-78,-26,-4,-25,2,-73,-28,-72,-19,-29,-16,-69,-62,-64,-63,-65,-67,-66,-68,2,2,-32,-35,-33,-31,-34,-30,2,-22,-23,-38,-39,-37,-40,-36,-17,-24,2,-18,]),'NOTEQUAL':([26,27,37,38,39,56,67,97,109,110,111,112,114,115,116,118,],[-77,-70,-71,-78,69,-73,-72,-71,-69,-62,-64,-63,-65,-67,-66,-68,]),'TRANSPOSE':([37,97,],[67,67,]),'EQUAL':([26,27,37,38,39,56,67,97,109,110,111,112,114,115,116,118,],[-77,-70,-71,-78,74,-73,-72,-71,-69,-62,-64,-63,-65,-67,-66,-68,]),'DOTADD':([26,27,37,38,39,56,67,97,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,154,],[-77,-70,-71,-78,77,-73,-72,-71,77,77,-69,-62,-64,-63,77,-65,-67,-66,77,-68,77,77,77,77,]),'WHILE':([0,1,6,7,9,10,11,13,17,19,20,21,22,23,26,27,30,37,38,41,44,54,55,56,58,67,83,98,100,109,110,111,112,114,115,116,118,121,123,125,131,132,133,136,137,138,144,145,147,148,149,150,151,153,154,156,157,],[3,-15,-7,-10,-8,3,-13,-11,-5,-9,-12,3,-14,-6,-77,-70,-27,-71,-78,-26,-4,-25,3,-73,-28,-72,-19,-29,-16,-69,-62,-64,-63,-65,-67,-66,-68,3,3,-32,-35,-33,-31,-34,-30,3,-22,-23,-38,-39,-37,-40,-36,-17,-24,3,-18,]),'PRINT':([0,1,6,7,9,10,11,13,17,19,20,21,22,23,26,27,30,37,38,41,44,54,55,56,58,67,83,98,100,109,110,111,112,114,115,116,118,121,123,125,131,132,133,136,137,138,144,145,147,148,149,150,151,153,154,156,157,],[5,-15,-7,-10,-8,5,-13,-11,-5,-9,-12,5,-14,-6,-77,-70,-27,-71,-78,-26,-4,-25,5,-73,-28,-72,-19,-29,-16,-69,-62,-64,-63,-65,-67,-66,-68,5,5,-32,-35,-33,-31,-34,-30,5,-22,-23,-38,-39,-37,-40,-36,-17,-24,5,-18,]),'DOTMUL':([26,27,37,38,39,56,67,97,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,154,],[-77,-70,-71,-78,79,-73,-72,-71,79,79,-69,79,-64,79,79,-65,79,79,79,-68,79,79,79,79,]),'INTNUM':([2,5,28,36,40,46,48,49,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,84,85,87,88,89,90,91,105,106,135,146,],[26,26,26,26,26,26,26,26,94,26,26,26,101,102,103,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,152,26,]),')':([24,25,26,27,29,32,37,38,39,56,65,67,82,99,101,102,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,139,140,141,],[-44,-47,-77,-70,-45,-43,-71,-78,-46,-73,-48,-72,121,138,139,140,141,-49,-59,-61,-69,-62,-64,-63,-60,-65,-67,-66,-58,-68,-56,-57,-74,-76,-75,]),'(':([3,16,31,34,35,],[40,53,57,59,60,]),'+':([26,27,37,38,39,56,67,97,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,154,],[-77,-70,-71,-78,71,-73,-72,-71,71,71,-69,-62,-64,-63,71,-65,-67,-66,71,-68,71,71,71,71,]),'*':([26,27,37,38,39,56,67,97,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,154,],[-77,-70,-71,-78,72,-73,-72,-71,72,72,-69,72,-64,72,72,-65,72,72,72,-68,72,72,72,72,]),'-':([2,5,26,27,28,37,38,39,40,46,48,49,51,52,53,56,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,84,85,87,88,89,90,91,97,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,146,154,],[28,28,-77,-70,28,-71,-78,73,28,28,28,28,28,28,28,-73,-72,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-71,73,73,-69,-62,-64,-63,73,-65,-67,-66,73,-68,73,73,73,28,73,]),',':([24,25,26,27,29,32,37,38,39,43,56,62,63,65,66,67,94,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,139,140,141,],[-44,-47,-77,-70,-45,-43,-71,-78,-46,84,-73,105,-55,-48,-54,-72,135,-49,-59,-61,-69,-62,-64,-63,-60,-65,-67,-66,-58,-68,-56,-57,-74,-76,-75,]),'/':([26,27,37,38,39,56,67,97,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,154,],[-77,-70,-71,-78,75,-73,-72,-71,75,75,-69,75,-64,75,75,-65,75,75,75,-68,75,75,75,75,]),'DIVASSIGN':([15,47,97,134,155,],[51,90,51,-42,-41,]),'ADDASSIGN':([15,47,97,134,155,],[49,89,49,-42,-41,]),';':([2,4,18,24,25,26,27,29,32,33,37,38,39,42,43,56,62,63,64,65,66,67,86,92,93,95,96,97,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,126,127,128,129,130,139,140,141,142,],[30,41,54,-44,-47,-77,-70,-45,-43,58,-71,-78,-46,83,-20,-73,-52,-55,106,-48,-54,-72,125,132,133,136,137,-71,-49,-59,-61,-69,-62,-64,-63,-60,-65,-67,-66,-58,-68,-56,-57,-21,147,148,149,150,151,-74,-76,-75,-53,]),':':([26,27,37,38,56,67,109,110,111,112,114,115,116,118,124,],[-77,-70,-71,-78,-73,-72,-69,-62,-64,-63,-65,-67,-66,-68,146,]),'=':([15,45,47,97,134,155,],[52,85,91,52,-42,-41,]),'<':([26,27,37,38,39,56,67,97,109,110,111,112,114,115,116,118,],[-77,-70,-71,-78,80,-73,-72,-71,-69,-62,-64,-63,-65,-67,-66,-68,]),'$end':([0,1,6,7,8,9,10,11,13,14,17,19,20,22,23,30,41,44,54,58,83,98,100,125,131,132,133,136,137,144,145,147,148,149,150,151,153,157,],[-3,-15,-7,-10,0,-8,-2,-13,-11,-1,-5,-9,-12,-14,-6,-27,-26,-4,-25,-28,-19,-29,-16,-32,-35,-33,-31,-34,-30,-22,-23,-38,-39,-37,-40,-36,-17,-18,]),'EYE':([2,5,40,46,48,49,51,52,53,84,87,88,89,90,91,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'STRING':([2,5,36,40,46,48,49,51,52,53,84,87,88,89,90,91,105,106,],[32,32,66,32,32,32,32,32,32,32,32,32,32,32,32,32,66,66,]),'FOR':([0,1,6,7,9,10,11,13,17,19,20,21,22,23,26,27,30,37,38,41,44,54,55,56,58,67,83,98,100,109,110,111,112,114,115,116,118,121,123,125,131,132,133,136,137,138,144,145,147,148,149,150,151,153,154,156,157,],[12,-15,-7,-10,-8,12,-13,-11,-5,-9,-12,12,-14,-6,-77,-70,-27,-71,-78,-26,-4,-25,12,-73,-28,-72,-19,-29,-16,-69,-62,-64,-63,-65,-67,-66,-68,12,12,-32,-35,-33,-31,-34,-30,12,-22,-23,-38,-39,-37,-40,-36,-17,-24,12,-18,]),'ELSE':([1,6,7,9,11,13,19,20,22,23,30,41,54,58,83,98,100,125,131,132,133,136,137,144,145,147,148,149,150,151,153,157,],[-15,-7,-10,-8,-13,-11,-9,-12,-14,-6,-27,-26,-25,-28,-19,-29,-16,-32,-35,-33,-31,-34,-30,-22,-23,-38,-39,-37,-40,-36,156,-18,]),'ONES':([2,5,40,46,48,49,51,52,53,84,87,88,89,90,91,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'ZEROS':([2,5,40,46,48,49,51,52,53,84,87,88,89,90,91,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'LESSEQUAL':([26,27,37,38,39,56,67,97,109,110,111,112,114,115,116,118,],[-77,-70,-71,-78,78,-73,-72,-71,-69,-62,-64,-63,-65,-67,-66,-68,]),'[':([2,5,15,40,46,48,49,51,52,53,84,87,88,89,90,91,],[36,36,50,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'DOTSUB':([26,27,37,38,39,56,67,97,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,154,],[-77,-70,-71,-78,76,-73,-72,-71,76,76,-69,-62,-64,-63,76,-65,-67,-66,76,-68,76,76,76,76,]),']':([26,36,38,61,62,63,64,66,94,142,143,152,],[-77,65,-78,104,-52,-55,-50,-54,134,-53,-51,155,]),'ID':([0,1,2,5,6,7,9,10,11,12,13,17,19,20,21,22,23,26,27,28,30,37,38,40,41,44,46,48,49,51,52,53,54,55,56,58,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,87,88,89,90,91,98,100,109,110,111,112,114,115,116,118,121,123,125,131,132,133,136,137,138,144,145,146,147,148,149,150,151,153,154,156,157,],[15,-15,37,37,-7,-10,-8,15,-13,45,-11,-5,-9,-12,15,-14,-6,-77,-70,37,-27,-71,-78,37,-26,-4,37,37,37,37,97,37,-25,15,-73,-28,-72,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-19,37,37,37,37,37,37,97,-29,-16,-69,-62,-64,-63,-65,-67,-66,-68,15,15,-32,-35,-33,-31,-34,-30,15,-22,-23,37,-38,-39,-37,-40,-36,-17,-24,15,-18,]),'IF':([0,1,6,7,9,10,11,13,17,19,20,21,22,23,26,27,30,37,38,41,44,54,55,56,58,67,83,98,100,109,110,111,112,114,115,116,118,121,123,125,131,132,133,136,137,138,144,145,147,148,149,150,151,153,154,156,157,],[16,-15,-7,-10,-8,16,-13,-11,-5,-9,-12,16,-14,-6,-77,-70,-27,-71,-78,-26,-4,-25,16,-73,-28,-72,-19,-29,-16,-69,-62,-64,-63,-65,-67,-66,-68,16,16,-32,-35,-33,-31,-34,-30,16,-22,-23,-38,-39,-37,-40,-36,-17,-24,16,-18,]),'MOREEQUAL':([26,27,37,38,39,56,67,97,109,110,111,112,114,115,116,118,],[-77,-70,-71,-78,68,-73,-72,-71,-69,-62,-64,-63,-65,-67,-66,-68,]),'FLOAT':([2,5,28,36,40,46,48,49,51,52,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,84,85,87,88,89,90,91,105,106,146,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'BREAK':([0,1,6,7,9,10,11,13,17,19,20,21,22,23,26,27,30,37,38,41,44,54,55,56,58,67,83,98,100,109,110,111,112,114,115,116,118,121,123,125,131,132,133,136,137,138,144,145,147,148,149,150,151,153,154,156,157,],[18,-15,-7,-10,-8,18,-13,-11,-5,-9,-12,18,-14,-6,-77,-70,-27,-71,-78,-26,-4,-25,18,-73,-28,-72,-19,-29,-16,-69,-62,-64,-63,-65,-67,-66,-68,18,18,-32,-35,-33,-31,-34,-30,18,-22,-23,-38,-39,-37,-40,-36,-17,-24,18,-18,]),'CONTINUE':([0,1,6,7,9,10,11,13,17,19,20,21,22,23,26,27,30,37,38,41,44,54,55,56,58,67,83,98,100,109,110,111,112,114,115,116,118,121,123,125,131,132,133,136,137,138,144,145,147,148,149,150,151,153,154,156,157,],[4,-15,-7,-10,-8,4,-13,-11,-5,-9,-12,4,-14,-6,-77,-70,-27,-71,-78,-26,-4,-25,4,-73,-28,-72,-19,-29,-16,-69,-62,-64,-63,-65,-67,-66,-68,4,4,-32,-35,-33,-31,-34,-30,4,-22,-23,-38,-39,-37,-40,-36,-17,-24,4,-18,]),'MULASSIGN':([15,47,97,134,155,],[48,88,48,-42,-41,]),'{':([0,1,6,7,9,10,11,13,17,19,20,21,22,23,26,27,30,37,38,41,44,54,55,56,58,67,83,98,100,109,110,111,112,114,115,116,118,121,123,125,131,132,133,136,137,138,144,145,147,148,149,150,151,153,154,156,157,],[21,-15,-7,-10,-8,21,-13,-11,-5,-9,-12,21,-14,-6,-77,-70,-27,-71,-78,-26,-4,-25,21,-73,-28,-72,-19,-29,-16,-69,-62,-64,-63,-65,-67,-66,-68,21,21,-32,-35,-33,-31,-34,-30,21,-22,-23,-38,-39,-37,-40,-36,-17,-24,21,-18,]),'>':([26,27,37,38,39,56,67,97,109,110,111,112,114,115,116,118,],[-77,-70,-71,-78,81,-73,-72,-71,-69,-62,-64,-63,-65,-67,-66,-68,]),'}':([1,6,7,9,11,13,17,19,20,22,23,30,41,44,54,55,58,83,98,100,125,131,132,133,136,137,144,145,147,148,149,150,151,153,157,],[-15,-7,-10,-8,-13,-11,-5,-9,-12,-14,-6,-27,-26,-4,-25,100,-28,-19,-29,-16,-32,-35,-33,-31,-34,-30,-22,-23,-38,-39,-37,-40,-36,-17,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assign_in_array':([0,10,21,55,121,123,138,156,],[1,1,1,1,1,1,1,1,]),'matrix_initialization':([2,5,40,46,48,49,51,52,53,84,87,88,89,90,91,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'number':([2,5,28,36,40,46,48,49,51,52,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,84,85,87,88,89,90,91,105,106,146,],[27,27,27,63,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,63,63,27,]),'array':([2,5,40,46,48,49,51,52,53,84,87,88,89,90,91,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'if':([0,10,21,55,121,123,138,156,],[6,6,6,6,6,6,6,6,]),'dimensions':([36,106,],[61,143,]),'for':([0,10,21,55,121,123,138,156,],[7,7,7,7,7,7,7,7,]),'range':([85,],[123,]),'program':([0,],[8,]),'arguments':([5,84,],[42,122,]),'print':([0,10,21,55,121,123,138,156,],[9,9,9,9,9,9,9,9,]),'relational_expression':([2,5,40,46,48,49,51,52,53,84,87,88,89,90,91,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'return':([0,10,21,55,121,123,138,156,],[11,11,11,11,11,11,11,11,]),'assignment':([2,5,40,46,48,49,51,52,53,84,87,88,89,90,91,],[33,43,82,86,92,93,95,96,99,43,126,127,128,129,130,]),'break':([0,10,21,55,121,123,138,156,],[13,13,13,13,13,13,13,13,]),'instructions_opt':([0,],[14,]),'instructions':([0,21,],[10,55,]),'array_range':([15,],[47,]),'instruction':([0,10,21,55,121,123,138,156,],[17,44,17,44,144,145,153,157,]),'value':([36,105,106,],[62,62,62,]),'while':([0,10,21,55,121,123,138,156,],[19,19,19,19,19,19,19,19,]),'continue':([0,10,21,55,121,123,138,156,],[20,20,20,20,20,20,20,20,]),'values':([36,105,106,],[64,142,64,]),'expression':([2,5,28,40,46,48,49,51,52,53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,84,85,87,88,89,90,91,146,],[39,39,56,39,39,39,39,39,39,39,107,108,109,110,111,112,113,114,115,116,117,118,119,120,39,124,39,39,39,39,39,154,]),'assign':([0,10,21,52,55,91,121,123,138,156,],[22,22,22,98,22,131,22,22,22,22,]),'block':([0,10,21,55,121,123,138,156,],[23,23,23,23,23,23,23,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','parser.py',29),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt_1','parser.py',33),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt_2','parser.py',37),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_1','parser.py',41),
  ('instructions -> instruction','instructions',1,'p_instructions_2','parser.py',45),
  ('instruction -> block','instruction',1,'p_instruction','parser.py',49),
  ('instruction -> if','instruction',1,'p_instruction','parser.py',50),
  ('instruction -> print','instruction',1,'p_instruction','parser.py',51),
  ('instruction -> while','instruction',1,'p_instruction','parser.py',52),
  ('instruction -> for','instruction',1,'p_instruction','parser.py',53),
  ('instruction -> break','instruction',1,'p_instruction','parser.py',54),
  ('instruction -> continue','instruction',1,'p_instruction','parser.py',55),
  ('instruction -> return','instruction',1,'p_instruction','parser.py',56),
  ('instruction -> assign','instruction',1,'p_instruction','parser.py',57),
  ('instruction -> assign_in_array','instruction',1,'p_instruction','parser.py',58),
  ('block -> { instructions }','block',3,'p_block','parser.py',62),
  ('if -> IF ( assignment ) instruction','if',5,'p_if','parser.py',66),
  ('if -> IF ( assignment ) instruction ELSE instruction','if',7,'p_if','parser.py',67),
  ('print -> PRINT arguments ;','print',3,'p_print','parser.py',71),
  ('arguments -> assignment','arguments',1,'p_arguments','parser.py',75),
  ('arguments -> assignment , arguments','arguments',3,'p_arguments','parser.py',76),
  ('while -> WHILE ( assignment ) instruction','while',5,'p_while','parser.py',80),
  ('for -> FOR ID = range instruction','for',5,'p_for','parser.py',84),
  ('range -> expression : expression','range',3,'p_range','parser.py',88),
  ('break -> BREAK ;','break',2,'p_break','parser.py',92),
  ('continue -> CONTINUE ;','continue',2,'p_continue','parser.py',96),
  ('return -> RETURN ;','return',2,'p_return','parser.py',100),
  ('return -> RETURN assignment ;','return',3,'p_return','parser.py',101),
  ('assign -> ID = assign','assign',3,'p_assign','parser.py',105),
  ('assign -> ID = assignment ;','assign',4,'p_assign','parser.py',106),
  ('assign -> ID ADDASSIGN assignment ;','assign',4,'p_assign','parser.py',107),
  ('assign -> ID SUBASSIGN assignment ;','assign',4,'p_assign','parser.py',108),
  ('assign -> ID MULASSIGN assignment ;','assign',4,'p_assign','parser.py',109),
  ('assign -> ID DIVASSIGN assignment ;','assign',4,'p_assign','parser.py',110),
  ('assign_in_array -> ID array_range = assign','assign_in_array',4,'p_assign_in_array','parser.py',114),
  ('assign_in_array -> ID array_range = assignment ;','assign_in_array',5,'p_assign_in_array','parser.py',115),
  ('assign_in_array -> ID array_range ADDASSIGN assignment ;','assign_in_array',5,'p_assign_in_array','parser.py',116),
  ('assign_in_array -> ID array_range SUBASSIGN assignment ;','assign_in_array',5,'p_assign_in_array','parser.py',117),
  ('assign_in_array -> ID array_range MULASSIGN assignment ;','assign_in_array',5,'p_assign_in_array','parser.py',118),
  ('assign_in_array -> ID array_range DIVASSIGN assignment ;','assign_in_array',5,'p_assign_in_array','parser.py',119),
  ('array_range -> [ INTNUM , INTNUM ]','array_range',5,'p_array_range','parser.py',123),
  ('array_range -> [ INTNUM ]','array_range',3,'p_array_range','parser.py',124),
  ('assignment -> STRING','assignment',1,'p_assignment','parser.py',128),
  ('assignment -> matrix_initialization','assignment',1,'p_assignment','parser.py',129),
  ('assignment -> relational_expression','assignment',1,'p_assignment','parser.py',130),
  ('assignment -> expression','assignment',1,'p_assignment','parser.py',131),
  ('assignment -> array','assignment',1,'p_assignment','parser.py',132),
  ('array -> [ ]','array',2,'p_array','parser.py',136),
  ('array -> [ dimensions ]','array',3,'p_array','parser.py',137),
  ('dimensions -> values','dimensions',1,'p_dimensions','parser.py',141),
  ('dimensions -> values ; dimensions','dimensions',3,'p_dimensions','parser.py',142),
  ('values -> value','values',1,'p_values','parser.py',146),
  ('values -> value , values','values',3,'p_values','parser.py',147),
  ('value -> STRING','value',1,'p_value','parser.py',151),
  ('value -> number','value',1,'p_value','parser.py',152),
  ('relational_expression -> expression < expression','relational_expression',3,'p_relational_expression','parser.py',156),
  ('relational_expression -> expression > expression','relational_expression',3,'p_relational_expression','parser.py',157),
  ('relational_expression -> expression LESSEQUAL expression','relational_expression',3,'p_relational_expression','parser.py',158),
  ('relational_expression -> expression MOREEQUAL expression','relational_expression',3,'p_relational_expression','parser.py',159),
  ('relational_expression -> expression EQUAL expression','relational_expression',3,'p_relational_expression','parser.py',160),
  ('relational_expression -> expression NOTEQUAL expression','relational_expression',3,'p_relational_expression','parser.py',161),
  ('expression -> expression + expression','expression',3,'p_expression_binary_operation','parser.py',165),
  ('expression -> expression - expression','expression',3,'p_expression_binary_operation','parser.py',166),
  ('expression -> expression * expression','expression',3,'p_expression_binary_operation','parser.py',167),
  ('expression -> expression / expression','expression',3,'p_expression_binary_operation','parser.py',168),
  ('expression -> expression DOTADD expression','expression',3,'p_expression_binary_operation','parser.py',169),
  ('expression -> expression DOTSUB expression','expression',3,'p_expression_binary_operation','parser.py',170),
  ('expression -> expression DOTMUL expression','expression',3,'p_expression_binary_operation','parser.py',171),
  ('expression -> expression DOTDIV expression','expression',3,'p_expression_binary_operation','parser.py',172),
  ('expression -> number','expression',1,'p_expression','parser.py',176),
  ('expression -> ID','expression',1,'p_expression','parser.py',177),
  ('expression -> ID TRANSPOSE','expression',2,'p_expression_transpose','parser.py',181),
  ('expression -> - expression','expression',2,'p_expression_unegation','parser.py',185),
  ('matrix_initialization -> EYE ( INTNUM )','matrix_initialization',4,'p_matrix_initialization','parser.py',189),
  ('matrix_initialization -> ZEROS ( INTNUM )','matrix_initialization',4,'p_matrix_initialization','parser.py',190),
  ('matrix_initialization -> ONES ( INTNUM )','matrix_initialization',4,'p_matrix_initialization','parser.py',191),
  ('number -> INTNUM','number',1,'p_number','parser.py',195),
  ('number -> FLOAT','number',1,'p_number','parser.py',196),
]
